{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "author": "Microsoft",
        "comments": "Solution template for Amazon Web Services"
    },
    "parameters": {
        "location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
            }
        },
        "workspace-location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
            }
        },
        "workspace": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
            }
        },
        "workbook1-name": {
            "type": "string",
            "defaultValue": "AWS Network Activities",
            "minLength": 1,
            "metadata": {
                "description": "Name for the workbook"
            }
        },
        "workbook2-name": {
            "type": "string",
            "defaultValue": "AWS User Activities",
            "minLength": 1,
            "metadata": {
                "description": "Name for the workbook"
            }
        }
    },
    "resources": [
        {
            "name": "pid-2be652b5-01b5-4297-91de-fb1bdca4520e-partnercenter",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-dc-',uniquestring('AWS')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "AWS",
                "displayName": "Amazon Web Services",
                "contentKind": "DataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','AWS')]",
                            "apiVersion": "2021-03-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "StaticUI",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "AWS",
                                    "title": "Amazon Web Services",
                                    "publisher": "Amazon",
                                    "descriptionMarkdown": "Follow these instructions to connect to AWS and stream your CloudTrail logs into Microsoft Sentinel.",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "awsCloudTrail",
                                            "baseQuery": "AWSCloudTrail"
                                        }
                                    ],
                                    "connectivityCriterias": [
                                        {
                                            "type": "SentinelKinds",
                                            "value": [
                                                "AmazonWebServicesCloudTrail"
                                            ]
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "AWSCloudTrail",
                                            "lastDataReceivedQuery": "AWSCloudTrail\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AWS'),'/'))))]",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AWS')]",
                                "contentId": "AWS",
                                "kind": "DataConnector",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-dc-iyct3ysqungti",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-dc-iyct3ysqungti",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AWS'),'/'))))]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AWS')]"
            ],
            "location": "[parameters('workspace-location')]",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AWS')]",
                "contentId": "AWS",
                "kind": "DataConnector",
                "version": "1.0.0",
                "source": {
                    "kind": "Solution",
                    "name": "Amazon Web Services",
                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','AWS')]",
            "apiVersion": "2021-03-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
            "location": "[parameters('workspace-location')]",
            "kind": "StaticUI",
            "properties": {
                "connectorUiConfig": {
                    "title": "Amazon Web Services",
                    "publisher": "Amazon",
                    "descriptionMarkdown": "Follow these instructions to connect to AWS and stream your CloudTrail logs into Microsoft Sentinel.",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "awsCloudTrail",
                            "baseQuery": "AWSCloudTrail"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "AWSCloudTrail",
                            "lastDataReceivedQuery": "AWSCloudTrail\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriterias": [
                        {
                            "type": "SentinelKinds",
                            "value": [
                                "AmazonWebServicesCloudTrail"
                            ]
                        }
                    ],
                    "id": "AWS"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-dc-',uniquestring('AwsS3')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "AwsS3",
                "displayName": "Amazon Web Services S3",
                "contentKind": "DataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','AwsS3')]",
                            "apiVersion": "2021-03-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "StaticUI",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "AwsS3",
                                    "title": "Amazon Web Services S3",
                                    "publisher": "Amazon",
                                    "descriptionMarkdown": "This connector allows you to ingest AWS service logs, collected in AWS S3 buckets, to Microsoft Sentinel. The currently supported data types are: \n* AWS CloudTrail\n* VPC Flow Logs\n* AWS GuardDuty",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AWSGuardDuty",
                                            "baseQuery": "AWSGuardDuty"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AWSVPCFlow",
                                            "baseQuery": "AWSVPCFlow"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AWSCloudTrail",
                                            "baseQuery": "AWSCloudTrail"
                                        }
                                    ],
                                    "connectivityCriterias": [
                                        {
                                            "type": "SentinelKinds",
                                            "value": [
                                                "AmazonWebServicesS3"
                                            ]
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "AWSGuardDuty",
                                            "lastDataReceivedQuery": "AWSGuardDuty\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AWSVPCFlow",
                                            "lastDataReceivedQuery": "AWSVPCFlow\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AWSCloudTrail",
                                            "lastDataReceivedQuery": "AWSCloudTrail\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AwsS3'),'/'))))]",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AwsS3')]",
                                "contentId": "AwsS3",
                                "kind": "DataConnector",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-dc-pufnpblmqutie",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-dc-pufnpblmqutie",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AwsS3'),'/'))))]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AwsS3')]"
            ],
            "location": "[parameters('workspace-location')]",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AwsS3')]",
                "contentId": "AwsS3",
                "kind": "DataConnector",
                "version": "1.0.0",
                "source": {
                    "kind": "Solution",
                    "name": "Amazon Web Services",
                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','AwsS3')]",
            "apiVersion": "2021-03-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
            "location": "[parameters('workspace-location')]",
            "kind": "StaticUI",
            "properties": {
                "connectorUiConfig": {
                    "title": "Amazon Web Services S3",
                    "publisher": "Amazon",
                    "descriptionMarkdown": "This connector allows you to ingest AWS service logs, collected in AWS S3 buckets, to Microsoft Sentinel. The currently supported data types are: \n* AWS CloudTrail\n* VPC Flow Logs\n* AWS GuardDuty",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "AWSGuardDuty",
                            "baseQuery": "AWSGuardDuty"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "AWSVPCFlow",
                            "baseQuery": "AWSVPCFlow"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "AWSCloudTrail",
                            "baseQuery": "AWSCloudTrail"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "AWSGuardDuty",
                            "lastDataReceivedQuery": "AWSGuardDuty\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AWSVPCFlow",
                            "lastDataReceivedQuery": "AWSVPCFlow\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AWSCloudTrail",
                            "lastDataReceivedQuery": "AWSCloudTrail\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriterias": [
                        {
                            "type": "SentinelKinds",
                            "value": [
                                "AmazonWebServicesS3"
                            ]
                        }
                    ],
                    "id": "AwsS3"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-wb-',uniquestring('AmazonWebServicesNetworkActivitiesWorkbook')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "AmazonWebServicesNetworkActivitiesWorkbook",
                "displayName": "AWS Network Activities",
                "contentKind": "Workbook",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Insights/workbooks",
                            "name": "AmazonWebServicesNetworkActivitiesWorkbook",
                            "location": "[parameters('workspace-location')]",
                            "kind": "shared",
                            "apiVersion": "2021-08-01",
                            "metadata": {
                                "description": "Gain insights into AWS network related resource activities, including the creation, update, and deletions of security groups, network ACLs and routes, gateways, elastic load balancers, VPCs, subnets, and network interfaces."
                            },
                            "properties": {
                                "displayName": "AWS Network Activities",
                                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## AWS network activities\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"query\":\"\",\"parameters\":[{\"id\":\"b9e68383-3369-42fc-b7e7-506fd187832d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":1209600000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = AWSCloudTrail;\\r\\ndata\\r\\n| summarize Count = count() by AWSRegion\\r\\n| join kind = fullouter (datatable(AWSRegion:string)['OneDrive', 'SharePoint']) on AWSRegion\\r\\n| project AWSRegion = iff(AWSRegion == '', AWSRegion1, AWSRegion), Count = iff(AWSRegion == '', 0, Count)\\r\\n| join kind = inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by AWSRegion)\\r\\n    on AWSRegion\\r\\n| project-away AWSRegion1, TimeGenerated\\r\\n| extend AWSRegion = AWSRegion\\r\\n| union (\\r\\n    data \\r\\n    | summarize Count = count() \\r\\n    | extend jkey = 1\\r\\n    | join kind=inner (data\\r\\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n        | extend jkey = 1) on jkey\\r\\n    | extend AWSRegion = 'All', AWSRegions = '*'    \\r\\n)\\r\\n| order by Count desc\\r\\n| take 10\\r\\n\",\"size\":4,\"exportFieldName\":\"AWSRegion\",\"exportParameterName\":\"AWSRegion\",\"exportDefaultValue\":\"All\",\"exportToExcelOptions\":\"visible\",\"title\":\"Top 10 active regions - click to filter\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"AWSRegion\",\"formatter\":1,\"formatOptions\":{\"showIcon\":true}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\",\"showIcon\":true},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true}},\"showBorder\":false}},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n//| where EventSource == \\\"ec2.amazonaws.com\\\" and (EventName startswith \\\"create\\\" or EventName startswith \\\"replace\\\" or EventName startswith \\\"delete\\\" or EventName startswith \\\"authorize\\\" or EventName startswith \\\"revoke\\\") and (EventName !contains \\\"Volume\\\" and EventName !contains \\\"KeyPair\\\" and EventName !contains \\\"Tags\\\" and EventName !contains \\\"Image\\\" and EventName !contains \\\"LaunchTemplate\\\")\\r\\n| where AWSRegion == '{AWSRegion}' or '{AWSRegion}' == \\\"All\\\"\\r\\n| summarize count() by AWSRegion, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"Network events, by region\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n//| where EventSource == \\\"ec2.amazonaws.com\\\" and (EventName startswith \\\"create\\\" or EventName startswith \\\"replace\\\" or EventName startswith \\\"delete\\\" or EventName startswith \\\"authorize\\\" or EventName startswith \\\"revoke\\\") and (EventName !contains \\\"Volume\\\" and EventName !contains \\\"KeyPair\\\" and EventName !contains \\\"Tags\\\" and EventName !contains \\\"Image\\\" and EventName !contains \\\"LaunchTemplate\\\")\\r\\n| where AWSRegion == '{AWSRegion}' or '{AWSRegion}' == \\\"All\\\"\\r\\n| summarize count() by EventName, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"Network event types\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"customWidth\":\"50\",\"name\":\"query - 4\"},{\"type\":1,\"content\":{\"json\":\"---\\r\\n### Security group and network ACL change events\"},\"name\":\"text - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where EventSource == \\\"ec2.amazonaws.com\\\" and (EventName == \\\"AuthorizeSecurityGroupEgress\\\" or EventName == \\\"AuthorizeSecurityGroupIngress\\\" or EventName == \\\"CreateSecurityGroup\\\" or EventName == \\\"RevokeSecurityGroupEgress\\\" or EventName == \\\"RevokeSecurityGroupIngress\\\" or EventName == \\\"DeleteSecurityGroup\\\" or EventName == \\\"ReplaceNetworkAclEntry\\\" or EventName == \\\"CreateNetworkAcl\\\" or EventName == \\\"DeleteNetworkAcl\\\")\\r\\n| summarize Count = count() by EventName, UserIdentityArn, AWSRegion, EventTypeName, SessionIssuerType, EventSource, SourceIpAddress\\r\\n| project-rename TotalChanges = Count\\r\\n| order by TotalChanges desc\\r\\n\",\"size\":0,\"exportFieldName\":\"EventName\",\"exportParameterName\":\"EventName\",\"exportDefaultValue\":\"All\",\"exportToExcelOptions\":\"visible\",\"title\":\"Click to filter by event name\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"EventName\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true,\"showIcon\":true}},{\"columnMatch\":\"UserIdentityArn\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true,\"aggregation\":\"Unique\"}},{\"columnMatch\":\"AWSRegion\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"EventTypeName\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"SessionIssuerType\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"EventSource\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"SourceIpAddress\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"TotalChanges\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"purple\",\"showIcon\":true}}],\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where EventSource == \\\"ec2.amazonaws.com\\\" and (EventName == \\\"AuthorizeSecurityGroupEgress\\\" or EventName == \\\"AuthorizeSecurityGroupIngress\\\" or EventName == \\\"CreateSecurityGroup\\\" or EventName == \\\"RevokeSecurityGroupEgress\\\" or EventName == \\\"RevokeSecurityGroupIngress\\\" or EventName == \\\"DeleteSecurityGroup\\\" or EventName == \\\"ReplaceNetworkAclEntry\\\" or EventName == \\\"CreateNetworkAcl\\\" or EventName == \\\"DeleteNetworkAcl\\\")\\r\\n| where EventName == '{EventName}' or '{EventName}' == \\\"All\\\"\\r\\n| summarize count() by bin(TimeGenerated, {TimeRange:grain}), EventName\\r\\n| project-rename TotalChanges = count_\\r\\n\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"Network ACL events over time\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"name\":\"query - 7\"},{\"type\":1,\"content\":{\"json\":\"---\\r\\n### Create and Delete network events\"},\"name\":\"text - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where EventSource == \\\"ec2.amazonaws.com\\\" and (EventName startswith \\\"create\\\" or EventName startswith \\\"delete\\\") and (EventName !contains \\\"Volume\\\" and EventName !contains \\\"KeyPair\\\" and EventName !contains \\\"Tags\\\" and EventName !contains \\\"Image\\\" and EventName !contains \\\"LaunchTemplate\\\")\\r\\n| summarize count() by EventName, UserIdentityArn, AWSRegion, EventTypeName, SessionIssuerType, EventSource, SourceIpAddress\\r\\n| project-rename TotalChanges = count_ \\r\\n| order by TotalChanges desc\\r\\n\\r\\n\",\"size\":0,\"exportFieldName\":\"EventName\",\"exportParameterName\":\"EventName\",\"exportDefaultValue\":\"All\",\"exportToExcelOptions\":\"visible\",\"title\":\"Click to filter by event name\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"EventName\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true,\"showIcon\":true}},{\"columnMatch\":\"UserIdentityArn\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"AWSRegion\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"EventTypeName\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"SessionIssuerType\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"EventSource\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"SourceIpAddress\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"TotalChanges\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"blueDark\",\"showIcon\":true}}]}},\"customWidth\":\"50\",\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where EventSource == \\\"ec2.amazonaws.com\\\" and (EventName startswith \\\"create\\\" or EventName startswith \\\"delete\\\") and (EventName !contains \\\"Volume\\\" and EventName !contains \\\"KeyPair\\\" and EventName !contains \\\"Tags\\\" and EventName !contains \\\"Image\\\" and EventName !contains \\\"LaunchTemplate\\\")\\r\\n| where EventName == '{EventName}' or '{EventName}' == \\\"All\\\"\\r\\n| summarize count() by bin(TimeGenerated, {TimeRange:grain}), EventName\\r\\n| project-rename TotalChanges = count_\\r\\n\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"Create and Delete network events over time\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"name\":\"query - 10\"},{\"type\":1,\"content\":{\"json\":\"---\\r\\n### Elastic IP Address Operations\"},\"name\":\"text - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where EventSource == \\\"ec2.amazonaws.com\\\" and (EventName == \\\"AllocateAddress\\\" or EventName == \\\"ReleaseAddress\\\" or EventName == \\\"AssociateAddress\\\" or EventName == \\\"DisassociateAddress\\\")    \\r\\n| extend AllocationID1 = todynamic(ResponseElements).[\\\"allocationId\\\"]\\r\\n| extend AllocationID2 = todynamic(RequestParameters).[\\\"allocationId\\\"]\\r\\n| extend AssociationID = todynamic(ResponseElements).[\\\"associationId\\\"]\\r\\n| extend ElasticIP = todynamic(ResponseElements).[\\\"publicIp\\\"]\\r\\n| extend AllocationID = coalesce(AllocationID1, AllocationID2)\\r\\n| summarize count() by TimeGenerated, UserIdentityArn, EventName, tostring(todynamic(RequestParameters).[\\\"instanceId\\\"]), tostring(AllocationID), tostring(AssociationID), tostring(ElasticIP) \\r\\n| project-rename InstanceID = RequestParameters_instanceId\\r\\n| project-away count_\\r\\n\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"name\":\"query - 12\"}],\"fromTemplateId\":\"sentinel-AWSNetworkActivities\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                                "version": "1.0",
                                "sourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
                                "category": "sentinel"
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(resourceId('Microsoft.Insights/workbooks', 'AmazonWebServicesNetworkActivitiesWorkbook'),'/'))))]",
                            "properties": {
                                "description": "@{workbookKey=AmazonWebServicesNetworkActivitiesWorkbook; logoFileName=amazon_web_services_Logo.svg; description=Gain insights into AWS network related resource activities, including the creation, update, and deletions of security groups, network ACLs and routes, gateways, elastic load balancers, VPCs, subnets, and network interfaces.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=AWS Network Activities; templateRelativePath=AmazonWebServicesNetworkActivities.json; subtitle=; provider=Microsoft}.description",
                                "parentId": "[resourceId('Microsoft.Insights/workbooks', 'AmazonWebServicesNetworkActivitiesWorkbook')]",
                                "contentId": "AmazonWebServicesNetworkActivitiesWorkbook",
                                "kind": "Workbook",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                },
                                "dependencies": {
                                    "operator": "AND",
                                    "criteria": [
                                        {
                                            "contentId": "AWSCloudTrail",
                                            "kind": "DataType"
                                        },
                                        {
                                            "contentId": "AWS",
                                            "kind": "DataConnector"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-wb-hany3n4cygitw",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-wb-hany3n4cygitw",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-wb-',uniquestring('AmazonWebServicesUserActivitiesWorkbook')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "AmazonWebServicesUserActivitiesWorkbook",
                "displayName": "AWS User Activities",
                "contentKind": "Workbook",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Insights/workbooks",
                            "name": "AmazonWebServicesUserActivitiesWorkbook",
                            "location": "[parameters('workspace-location')]",
                            "kind": "shared",
                            "apiVersion": "2021-08-01",
                            "metadata": {
                                "description": "Gain insights into AWS user activities, including failed sign-in attempts, IP addresses, regions, user agents, and identity types, as well as potential malicious user activities with assumed roles."
                            },
                            "properties": {
                                "displayName": "AWS User Activities",
                                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## AWS user activities\"},\"name\":\"text - 1\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"query\":\"\",\"parameters\":[{\"id\":\"b075dcf3-76b9-412a-8094-f7dfe264b4a1\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":1209600000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":1,\"content\":{\"json\":\"### Signin and login events\"},\"name\":\"text - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where EventName contains \\\"Login\\\"\\r\\n| project TimeGenerated, UserIdentityArn, SourceIpAddress, LoginResult = tostring(parse_json(ResponseElements).ConsoleLogin), EventName, UserIdentityUserName\\r\\n| where LoginResult != \\\"\\\"\\r\\n| summarize count() by TimeGenerated, LoginResult, EventName, UserIdentityUserName, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"Sign-in events\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"customWidth\":\"50\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = AWSCloudTrail\\r\\n| where EventName contains \\\"Login\\\"\\r\\n| extend LoginResult = tostring(parse_json(ResponseElements).ConsoleLogin)\\r\\n| where LoginResult != \\\"\\\";\\r\\nlet appData = data\\r\\n| summarize TotalCount = count() by LoginResult\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by LoginResult\\r\\n    | project-away TimeGenerated) on LoginResult\\r\\n| order by TotalCount desc, LoginResult asc\\r\\n| project LoginResult, TotalCount, Trend\\r\\n| serialize Id = row_number();\\r\\ndata\\r\\n| summarize TotalCount = count() by EventName , LoginResult\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by LoginResult, EventName\\r\\n    | project-away TimeGenerated) on LoginResult, EventName\\r\\n| order by TotalCount desc, LoginResult asc\\r\\n| project LoginResult, EventName, TotalCount, Trend\\r\\n| serialize Id = row_number(1000000)\\r\\n| join kind=inner (appData) on LoginResult\\r\\n| project Id, Name = EventName, Type = 'EventName', ['LoginResults Count'] = TotalCount, Trend, ParentId = Id1\\r\\n| union (appData \\r\\n    | project Id, Name = LoginResult, Type = 'LoginResult', ['LoginResults Count'] = TotalCount,  Trend)\\r\\n| order by ['LoginResults Count'] desc, Name asc\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"Sign-in events results\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Id\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Name\",\"formatter\":18,\"formatOptions\":{\"showIcon\":true,\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Success\",\"representation\":\"success\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Failure\",\"representation\":\"failed\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Type\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"LoginResults Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"blueDark\",\"showIcon\":true}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"min\":0,\"palette\":\"purple\",\"showIcon\":true}},{\"columnMatch\":\"ParentId\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}}],\"hierarchySettings\":{\"idColumn\":\"Id\",\"parentColumn\":\"ParentId\",\"treeType\":0,\"expanderColumn\":\"Name\"}}},\"customWidth\":\"50\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where EventName contains \\\"login\\\" or EventName contains \\\"signin\\\"\\r\\n| extend Result = tostring(parse_json(ResponseElements).ConsoleLogin)\\r\\n| where Result != \\\"\\\"\\r\\n| summarize Success = sum(Result == \\\"Success\\\"), Failure = sum(Result == \\\"Failure\\\") by UserIdentityUserName, UserIdentityAccountId, SourceIpAddress, EventName\\r\\n//| summarize NumberOfIPs = count() by UserIdentityUserName, UserIdentityAccountId, Success, Failure, EventName\\r\\n| sort by Failure desc \\r\\n\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"User sign-ins, by failure rate, and IP addresses\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"UserIdentityUserName\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"UserIdentityAccountId\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true,\"aggregation\":\"Unique\"}},{\"columnMatch\":\"SourceIpAddress\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true,\"aggregation\":\"Unique\"}},{\"columnMatch\":\"EventName\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true,\"aggregation\":\"Unique\"}},{\"columnMatch\":\"Success\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"greenRed\",\"showIcon\":true,\"aggregation\":\"Sum\"}},{\"columnMatch\":\"Failure\",\"formatter\":8,\"formatOptions\":{\"palette\":\"greenRed\",\"showIcon\":true,\"aggregation\":\"Sum\"}},{\"columnMatch\":\"NumberOfIPs\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true,\"aggregation\":\"Unique\"}},{\"columnMatch\":\"$gen_group\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"UserIdentityUserName\"]},\"sortBy\":[{\"itemKey\":\"$gen_heatmap_Failure_5\",\"sortOrder\":2}]}},\"customWidth\":\"50\",\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where EventName contains \\\"login\\\" or EventName contains \\\"signin\\\"\\r\\n| summarize count() by Event = strcat(EventTypeName, \\\": \\\", EventName), bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"Console and API signin events over time\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where EventName contains \\\"Login\\\"\\r\\n| where tostring(parse_json(ResponseElements).ConsoleLogin) == \\\"Failure\\\"\\r\\n| summarize count() by UserIdentityUserName, UserIdentityArn, SourceIpAddress, ErrorMessage, UserAgent, AWSRegion,  TimeGenerated \",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"Failed sign-ins\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"UserIdentityUserName\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true,\"showIcon\":true}},{\"columnMatch\":\"UserIdentityArn\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"SourceIpAddress\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"ErrorMessage\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"UserAgent\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"AWSRegion\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":6,\"formatOptions\":{\"showIcon\":true},\"dateFormat\":{\"formatName\":\"fullDateTimePattern\"}},{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"redDark\",\"showIcon\":true}}],\"filter\":true}},\"name\":\"query - 8\"},{\"type\":1,\"content\":{\"json\":\"---\\r\\n### Activities, by user types\"},\"name\":\"text - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where UserIdentityType == \\\"IAMUser\\\"\\r\\n| summarize NumberOfEvents = count() by UserIdentityUserName, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"Active users\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"33\",\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| summarize NumberOfEvents = count() by UserIdentityAccountId , bin(TimeGenerated, {TimeRange:grain})\\r\\n| where UserIdentityAccountId != \\\"\\\"\",\"size\":0,\"exportDefaultValue\":\"*\",\"exportToExcelOptions\":\"visible\",\"title\":\"Active account IDs\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"33\",\"name\":\"query - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| summarize count() by UserIdentityType, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"User identity types\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"33\",\"name\":\"query - 15\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n//| where UserIdentityAccountId != \\\"\\\"\\r\\n//| where UserIdentityUserName != \\\"\\\"\\r\\n| summarize NumberOfEvents = count() by UserIdentityAccountId, UserIdentityUserName, EventName,SourceIpAddress, UserIdentityType, EventTypeName, TimeGenerated\\r\\n| order by NumberOfEvents desc\",\"size\":0,\"showAnalytics\":true,\"exportToExcelOptions\":\"visible\",\"title\":\"Summary\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"UserIdentityAccountId\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true,\"showIcon\":true}},{\"columnMatch\":\"UserIdentityUserName\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"EventName\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"SourceIpAddress\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"UserIdentityType\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"EventTypeName\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"NumberOfEvents\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"purple\",\"showIcon\":true}}],\"rowLimit\":1000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 15\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where EventName == \\\"GetCallerIdentity\\\"\\r\\n| where UserIdentityType == \\\"AssumedRole\\\" \\r\\n| summarize Count = count() by SourceIpAddress, UserIdentityAccountId, UserIdentityPrincipalid, AWSRegion, TimeGenerated\\r\\n| sort by Count desc nulls last \",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"Suspicious assumed-role account reconnaissance\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SourceIpAddress\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"UserIdentityAccountId\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"UserIdentityPrincipalid\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"AWSRegion\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"redDark\",\"showIcon\":true}}]}},\"customWidth\":\"50\",\"name\":\"query - 11\"},{\"type\":1,\"content\":{\"json\":\"---\\r\\n### Region activities\"},\"name\":\"text - 19\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = AWSCloudTrail;\\r\\nlet appData = data\\r\\n| summarize TotalCount = count() by AWSRegion\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by AWSRegion\\r\\n    | project-away TimeGenerated) on AWSRegion\\r\\n| order by TotalCount desc, AWSRegion asc\\r\\n| project AWSRegion, TotalCount, Trend\\r\\n| serialize Id = row_number();\\r\\ndata\\r\\n| summarize TotalCount = count() by EventName , AWSRegion\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by AWSRegion, EventName\\r\\n    | project-away TimeGenerated) on AWSRegion, EventName\\r\\n| order by TotalCount desc, AWSRegion asc\\r\\n| project AWSRegion, EventName, TotalCount, Trend\\r\\n| serialize Id = row_number(1000000)\\r\\n| join kind=inner (appData) on AWSRegion\\r\\n| project Id, Name = EventName, Type = 'EventName', ['AWSRegions Count'] = TotalCount, Trend,  ParentId = Id1\\r\\n| union (appData \\r\\n    | project Id, Name = AWSRegion, Type = 'AWSRegion', ['AWSRegions Count'] = TotalCount,  Trend)\\r\\n| order by ['AWSRegions Count'] desc, Name asc\",\"size\":0,\"exportParameterName\":\"RegionFilter\",\"exportDefaultValue\":\"{ \\\"Name\\\":\\\"\\\", \\\"Type\\\":\\\"*\\\"}\",\"showAnalytics\":true,\"exportToExcelOptions\":\"visible\",\"title\":\"Activities, by region - click to filter\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Id\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Name\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Type\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"AWSRegions Count\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"orange\",\"showIcon\":true}},{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"min\":0,\"palette\":\"lightBlue\",\"showIcon\":true}},{\"columnMatch\":\"ParentId\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}}],\"filter\":true,\"hierarchySettings\":{\"idColumn\":\"Id\",\"parentColumn\":\"ParentId\",\"treeType\":0,\"expanderColumn\":\"Name\"}}},\"customWidth\":\"50\",\"name\":\"query - 13\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let details = dynamic({RegionFilter});\\r\\nAWSCloudTrail\\r\\n| where details.Type == \\\"*\\\" or (details.Type == \\\"EventName\\\" and details.Name == EventName) or (details.Type == \\\"AWSRegion\\\" and details.Name == AWSRegion)\\r\\n| summarize count() by AWSRegion, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"Activities, by region over time\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\"},\"customWidth\":\"50\",\"name\":\"query - 12\"},{\"type\":1,\"content\":{\"json\":\"---\\r\\n### User agent\"},\"name\":\"text - 18\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| summarize Count = count() by UserAgent\\r\\n| order by Count\\r\\n\",\"size\":0,\"exportFieldName\":\"UserAgent\",\"exportParameterName\":\"UserAgent\",\"exportDefaultValue\":\"All\",\"showAnalytics\":true,\"exportToExcelOptions\":\"visible\",\"title\":\"User agent activities - click to filter\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"UserAgent\",\"formatter\":0,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"blueDark\",\"showIcon\":true}}],\"filter\":true}},\"customWidth\":\"40\",\"name\":\"query - 16\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AWSCloudTrail\\r\\n| where '{UserAgent}' == UserAgent or '{UserAgent}' == \\\"All\\\"\\r\\n| summarize Count = count() by UserAgent, TimeGenerated\",\"size\":0,\"exportToExcelOptions\":\"visible\",\"title\":\"User agent activities over time\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\"},\"customWidth\":\"60\",\"name\":\"query - 17\"}],\"fromTemplateId\":\"sentinel-AWSUserActivities\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                                "version": "1.0",
                                "sourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
                                "category": "sentinel"
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(resourceId('Microsoft.Insights/workbooks', 'AmazonWebServicesUserActivitiesWorkbook'),'/'))))]",
                            "properties": {
                                "description": "@{workbookKey=AmazonWebServicesUserActivitiesWorkbook; logoFileName=amazon_web_services_Logo.svg; description=Gain insights into AWS user activities, including failed sign-in attempts, IP addresses, regions, user agents, and identity types, as well as potential malicious user activities with assumed roles.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=AWS User Activities; templateRelativePath=AmazonWebServicesUserActivities.json; subtitle=; provider=Microsoft}.description",
                                "parentId": "[resourceId('Microsoft.Insights/workbooks', 'AmazonWebServicesUserActivitiesWorkbook')]",
                                "contentId": "AmazonWebServicesUserActivitiesWorkbook",
                                "kind": "Workbook",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                },
                                "dependencies": {
                                    "operator": "AND",
                                    "criteria": [
                                        {
                                            "contentId": "AWSCloudTrail",
                                            "kind": "DataType"
                                        },
                                        {
                                            "contentId": "AWS",
                                            "kind": "DataConnector"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-wb-3vfjar352zor4",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-wb-3vfjar352zor4",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('8c2ef238-67a0-497d-b1dd-5c8a0f533e25')),'1.0.1'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "8c2ef238-67a0-497d-b1dd-5c8a0f533e25",
                "displayName": "Changes to internet facing AWS RDS Database instances",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "8c2ef238-67a0-497d-b1dd-5c8a0f533e25",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Amazon Relational Database Service (RDS) is scalable relational database in the cloud.\nIf your organization have one or more AWS RDS Databases running, monitoring changes to especially internet facing AWS RDS (Relational Database Service)\nOnce alerts triggered, validate if changes observed are authorized and adhere to change control policy.\nMore information: https://medium.com/@GorillaStack/the-most-important-aws-cloudtrail-security-events-to-track-a5b9873f8255\nand RDS API Reference Docs: https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_Operations.html",
                                "displayName": "Changes to internet facing AWS RDS Database instances",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AuthorizeDBSecurityGroupIngress\",\"CreateDBSecurityGroup\",\"DeleteDBSecurityGroup\",\"RevokeDBSecurityGroupIngress\"]);\nAWSCloudTrail\n| where EventName in~ (EventNameList)\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, UserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, ResponseElements\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserIdentityUserName, IPCustomEntity = SourceIpAddress\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    },
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWSS3"
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8c2ef238-67a0-497d-b1dd-5c8a0f533e25'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 1",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8c2ef238-67a0-497d-b1dd-5c8a0f533e25')]",
                                "contentId": "8c2ef238-67a0-497d-b1dd-5c8a0f533e25",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-73on7wxuexfrw",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-73on7wxuexfrw",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('65360bb0-8986-4ade-a89d-af3cf44d28aa')),'1.0.2'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "65360bb0-8986-4ade-a89d-af3cf44d28aa",
                "displayName": "Changes to Amazon VPC settings",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.2",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "65360bb0-8986-4ade-a89d-af3cf44d28aa",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Amazon Virtual Private Cloud (Amazon VPC) lets you provision a logically isolated section of the AWS Cloud where you can launch AWS resources\nin a virtual network that you define.\nThis identifies changes to Amazon VPC (Virtual Private Cloud) settings such as new ACL entries,routes, routetable or Gateways.\nMore information: https://medium.com/@GorillaStack/the-most-important-aws-cloudtrail-security-events-to-track-a5b9873f8255\nand AWS VPC API Docs: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/OperationList-query-vpc.html",
                                "displayName": "Changes to Amazon VPC settings",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"CreateNetworkAclEntry\",\"CreateRoute\",\"CreateRouteTable\",\"CreateInternetGateway\",\"CreateNatGateway\"]);\nAWSCloudTrail\n| where EventName in~ (EventNameList)\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent,\nUserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, ResponseElements\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserIdentityUserName, IPCustomEntity = SourceIpAddress\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    },
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWSS3"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation",
                                    "LateralMovement"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1563"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '65360bb0-8986-4ade-a89d-af3cf44d28aa'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 2",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '65360bb0-8986-4ade-a89d-af3cf44d28aa')]",
                                "contentId": "65360bb0-8986-4ade-a89d-af3cf44d28aa",
                                "kind": "AnalyticsRule",
                                "version": "1.0.2",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-b34hwe5hl3mym",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-b34hwe5hl3mym",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.2",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('610d3850-c26f-4f20-8d86-f10fdf2425f5')),'1.0.1'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "610d3850-c26f-4f20-8d86-f10fdf2425f5",
                "displayName": "Changes made to AWS CloudTrail logs",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "610d3850-c26f-4f20-8d86-f10fdf2425f5",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Attackers often try to hide their steps by deleting or stopping the collection of logs that could show their activity.\nThis alert identifies any manipulation of AWS CloudTrail, Cloudwatch/EventBridge or VPC Flow logs.\nMore Information: AWS CloudTrail API: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_Operations.html\nAWS Cloudwatch/Eventbridge API: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_Operations.html\nAWS DelteteFlowLogs API : https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html ",
                                "displayName": "Changes made to AWS CloudTrail logs",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"UpdateTrail\",\"DeleteTrail\",\"StopLogging\",\"DeleteFlowLogs\",\"DeleteEventBus\"]);\nAWSCloudTrail\n| where EventName in~ (EventNameList)\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent,\nUserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserIdentityUserName, IPCustomEntity = SourceIpAddress\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    },
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWSS3"
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '610d3850-c26f-4f20-8d86-f10fdf2425f5'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 3",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '610d3850-c26f-4f20-8d86-f10fdf2425f5')]",
                                "contentId": "610d3850-c26f-4f20-8d86-f10fdf2425f5",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-tllngzf34js34",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-tllngzf34js34",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('d25b1998-a592-4bc5-8a3a-92b39eedb1bc')),'1.0.3'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "d25b1998-a592-4bc5-8a3a-92b39eedb1bc",
                "displayName": "Login to AWS Management Console without MFA",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.3",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "d25b1998-a592-4bc5-8a3a-92b39eedb1bc",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Multi-Factor Authentication (MFA) helps you to prevent credential compromise. This alert identifies logins to the AWS Management Console without MFA.\nYou can limit this detection to trigger for adminsitrative accounts if you do not have MFA enabled on all accounts.\nThis is done by looking at the eventName ConsoleLogin and if the AdditionalEventData field indicates MFA was NOT used\nand the ResponseElements field indicates NOT a Failure. Thereby indicating that a non-MFA login was successful.",
                                "displayName": "Login to AWS Management Console without MFA",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName =~ \"ConsoleLogin\"\n| extend MFAUsed = tostring(parse_json(AdditionalEventData).MFAUsed), LoginResult = tostring(parse_json(ResponseElements).ConsoleLogin), indexId = indexof(tostring(UserIdentityPrincipalid),\":\")\n| where MFAUsed !~ \"Yes\" and LoginResult !~ \"Failure\"\n| where SessionIssuerUserName !contains \"AWSReservedSSO\"\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by EventName, EventTypeName, LoginResult, MFAUsed, UserIdentityAccountId,  UserIdentityPrincipalid, UserAgent,\nUserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, indexId\n| extend timestamp = StartTimeUtc, AccountCustomEntity = iif(isempty(UserIdentityUserName),substring(UserIdentityPrincipalid, toint(indexId)+1), UserIdentityUserName), IPCustomEntity = SourceIpAddress\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    },
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWSS3"
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion",
                                    "PrivilegeEscalation",
                                    "Persistence",
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd25b1998-a592-4bc5-8a3a-92b39eedb1bc'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 4",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd25b1998-a592-4bc5-8a3a-92b39eedb1bc')]",
                                "contentId": "d25b1998-a592-4bc5-8a3a-92b39eedb1bc",
                                "kind": "AnalyticsRule",
                                "version": "1.0.3",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-kcmqevzhq5oqi",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-kcmqevzhq5oqi",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.3",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('32555639-b639-4c2b-afda-c0ae0abefa55')),'1.0.1'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "32555639-b639-4c2b-afda-c0ae0abefa55",
                "displayName": "Monitor AWS Credential abuse or hijacking",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "32555639-b639-4c2b-afda-c0ae0abefa55",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Looking for GetCallerIdentity Events where the UserID Type is AssumedRole\nAn attacker who has assumed the role of a legitimate account can call the GetCallerIdentity function to determine what account they are using.\nA legitimate user using legitimate credentials would not need to call GetCallerIdentity since they should already know what account they are using.\nMore Information: https://duo.com/decipher/trailblazer-hunts-compromised-credentials-in-aws\nAWS STS GetCallerIdentity API: https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html ",
                                "displayName": "Monitor AWS Credential abuse or hijacking",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName =~ \"GetCallerIdentity\" and UserIdentityType =~ \"AssumedRole\"\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by SourceIpAddress, EventName, EventTypeName, UserIdentityType, UserIdentityAccountId, UserIdentityPrincipalid,\nUserAgent, UserIdentityUserName, SessionMfaAuthenticated,AWSRegion, EventSource, AdditionalEventData, ResponseElements\n| extend timestamp = StartTime, AccountCustomEntity = UserIdentityUserName, IPCustomEntity = SourceIpAddress\n| sort by EndTime desc nulls last\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    },
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWSS3"
                                    }
                                ],
                                "tactics": [
                                    "Discovery"
                                ],
                                "techniques": [
                                    "T1087"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '32555639-b639-4c2b-afda-c0ae0abefa55'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 5",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '32555639-b639-4c2b-afda-c0ae0abefa55')]",
                                "contentId": "32555639-b639-4c2b-afda-c0ae0abefa55",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-gotpvgl4t5h2w",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-gotpvgl4t5h2w",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('826bb2f8-7894-4785-9a6b-a8a855d8366f')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "826bb2f8-7894-4785-9a6b-a8a855d8366f",
                "displayName": "Full Admin policy created and then attached to Roles, Users or Groups",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "826bb2f8-7894-4785-9a6b-a8a855d8366f",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identity and Access Management (IAM) securely manages access to AWS services and resources. \nIdentifies when a policy is created with Full Administrators Access (Allow-Action:*,Resource:*). \nThis policy can be attached to role,user or group and may be used by an adversary to escalate a normal user privileges to an adminsitrative level.\nAWS IAM Policy Grammar: https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html\nand AWS IAM API at https://docs.aws.amazon.com/IAM/latest/APIReference/API_Operations.html",
                                "displayName": "Full Admin policy created and then attached to Roles, Users or Groups",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\nlet createPolicy = \"CreatePolicy\";\nlet timeframe = 1d;\nlet lookback = 14d;\n// Creating Master table with all the events to use with materialize for better performance\nlet EventInfo = AWSCloudTrail\n| where TimeGenerated >= ago(lookback)\n| where EventName in (EventNameList) or EventName == createPolicy;\n//Checking for Policy creation event with Full Admin Privileges since lookback period.\nlet FullAdminPolicyEvents =  materialize(  EventInfo\n| where TimeGenerated >= ago(lookback)\n| where EventName == createPolicy\n| extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource)\n| mvexpand Action\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and Action == \"*\" and Resource == \"*\"\n| distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| project-rename StartTime = TimeGenerated  );\nlet PolicyAttach = materialize(  EventInfo\n| where TimeGenerated >= ago(timeframe)\n| where EventName in (EventNameList)\n| extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n| summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName,   UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n| extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n| project EventSource, PolicyName, AttachEvent, AttachEventCount\n);\n// Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n// These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\nFullAdminPolicyEvents\n| join kind=leftouter\n(\n    PolicyAttach\n)\non PolicyName\n| project-away PolicyName1\n| extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P14D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    },
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWSS3"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '826bb2f8-7894-4785-9a6b-a8a855d8366f'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 6",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '826bb2f8-7894-4785-9a6b-a8a855d8366f')]",
                                "contentId": "826bb2f8-7894-4785-9a6b-a8a855d8366f",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-nnuviqjm4lsm4",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-nnuviqjm4lsm4",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('4f19d4e3-ec5f-4abc-9e61-819eb131758c')),'1.0.1'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "4f19d4e3-ec5f-4abc-9e61-819eb131758c",
                "displayName": "Changes to AWS Security Group ingress and egress settings",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "4f19d4e3-ec5f-4abc-9e61-819eb131758c",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "A Security Group acts as a virtual firewall of an instance to control inbound and outbound traffic.\n Hence, ingress and egress settings changes to AWS Security Group should be monitored as these can expose the enviornment to new attack vectors.\nMore information: https://medium.com/@GorillaStack/the-most-important-aws-cloudtrail-security-events-to-track-a5b9873f8255.",
                                "displayName": "Changes to AWS Security Group ingress and egress settings",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([ \"AuthorizeSecurityGroupEgress\", \"AuthorizeSecurityGroupIngress\", \"RevokeSecurityGroupEgress\", \"RevokeSecurityGroupIngress\"]);\nAWSCloudTrail\n| where EventName in~ (EventNameList)\n| extend User = iif(isnotempty(UserIdentityUserName), UserIdentityUserName, SessionIssuerUserName)\n| summarize EventCount=count(), StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated)\nby EventSource, EventName, UserIdentityType, User, SourceIpAddress, UserAgent, SessionMfaAuthenticated, AWSRegion,\nAdditionalEventData, UserIdentityAccountId, UserIdentityPrincipalid, ResponseElements\n| extend timestamp = StartTimeUtc, AccountCustomEntity = User , IPCustomEntity = SourceIpAddress\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    },
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWSS3"
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4f19d4e3-ec5f-4abc-9e61-819eb131758c'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 7",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4f19d4e3-ec5f-4abc-9e61-819eb131758c')]",
                                "contentId": "4f19d4e3-ec5f-4abc-9e61-819eb131758c",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-j2upfxfpg7svs",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-j2upfxfpg7svs",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('c7bfadd4-34a6-4fa5-82f8-3691a32261e8')),'1.0.1'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "c7bfadd4-34a6-4fa5-82f8-3691a32261e8",
                "displayName": "Changes to AWS Elastic Load Balancer security groups",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "c7bfadd4-34a6-4fa5-82f8-3691a32261e8",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Elastic Load Balancer distributes incoming traffic across multiple instances in multiple availability Zones. This increases the fault tolerance of your applications.\n Unwanted changes to Elastic Load Balancer specific security groups could open your environment to attack and  hence needs monitoring.\n More information: https://medium.com/@GorillaStack/the-most-important-aws-cloudtrail-security-events-to-track-a5b9873f8255\n and https://aws.amazon.com/elasticloadbalancing/.",
                                "displayName": "Changes to AWS Elastic Load Balancer security groups",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"ApplySecurityGroupsToLoadBalancer\", \"SetSecurityGroups\"]);\nAWSCloudTrail\n| where EventName in~ (EventNameList)\n| extend User = iif(isnotempty(UserIdentityUserName), UserIdentityUserName, SessionIssuerUserName)\n| summarize EventCount=count(), StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated)\nby EventSource, EventName, UserIdentityType, User, SourceIpAddress, UserAgent, SessionMfaAuthenticated, AWSRegion,\nAdditionalEventData, UserIdentityAccountId, UserIdentityPrincipalid, ResponseElements\n| extend timestamp = StartTimeUtc, AccountCustomEntity = User , IPCustomEntity = SourceIpAddress\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    },
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWSS3"
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c7bfadd4-34a6-4fa5-82f8-3691a32261e8'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 8",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c7bfadd4-34a6-4fa5-82f8-3691a32261e8')]",
                                "contentId": "c7bfadd4-34a6-4fa5-82f8-3691a32261e8",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-t3o5qbychr5gy",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-t3o5qbychr5gy",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('0ee2aafb-4500-4e36-bcb1-e90eec2f0b9b')),'1.0.1'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "0ee2aafb-4500-4e36-bcb1-e90eec2f0b9b",
                "displayName": "NRT Login to AWS Management Console without MFA",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "0ee2aafb-4500-4e36-bcb1-e90eec2f0b9b",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "NRT",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Multi-Factor Authentication (MFA) helps you to prevent credential compromise. This alert identifies logins to the AWS Management Console without MFA.\nYou can limit this detection to trigger for administrative accounts if you do not have MFA enabled on all accounts.\nThis is done by looking at the eventName ConsoleLogin and if the AdditionalEventData field indicates MFA was NOT used\nand the ResponseElements field indicates NOT a Failure. Thereby indicating that a non-MFA login was successful.",
                                "displayName": "NRT Login to AWS Management Console without MFA",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName =~ \"ConsoleLogin\"\n| extend MFAUsed = tostring(parse_json(AdditionalEventData).MFAUsed), LoginResult = tostring(parse_json(ResponseElements).ConsoleLogin)\n| where MFAUsed !~ \"Yes\" and LoginResult !~ \"Failure\"\n| where SessionIssuerUserName !contains \"AWSReservedSSO\"\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by EventName, EventTypeName, LoginResult, MFAUsed, UserIdentityAccountId,  UserIdentityPrincipalid, UserAgent,\nUserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion\n",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    },
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWSS3"
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion",
                                    "PrivilegeEscalation",
                                    "Persistence",
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserIdentityUserName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "SourceIpAddress"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '0ee2aafb-4500-4e36-bcb1-e90eec2f0b9b'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 9",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '0ee2aafb-4500-4e36-bcb1-e90eec2f0b9b')]",
                                "contentId": "0ee2aafb-4500-4e36-bcb1-e90eec2f0b9b",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-euomlzhvi4dww",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-euomlzhvi4dww",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('bf0cde21-0c41-48f6-a40c-6b5bd71fa106')),'1.0.2'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "bf0cde21-0c41-48f6-a40c-6b5bd71fa106",
                "displayName": "AWS Guard Duty Alert",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.2",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "bf0cde21-0c41-48f6-a40c-6b5bd71fa106",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Amazon GuardDuty is a threat detection service that continuously monitors your AWS accounts and workloads for malicious activity and delivers detailed security findings for visibility and remediation. This templates create an alert for each Amazon GuardDuty finding.",
                                "displayName": "AWS Guard Duty Alert",
                                "enabled": false,
                                "query": "AWSGuardDuty | extend tokens = split(ActivityType,\":\") | extend ThreatPurpose = tokens[0], tokens= split(tokens[1],\"/\") | extend ResourceTypeAffected = tokens[0], ThreatFamilyName= tokens[1] | extend UniqueFindingId = Id | extend AWSAcoundId = AccountId | project-away tokens,ActivityType, Id, AccountId | project-away TimeGenerated, TenantId, SchemaVersion, Region, Partition | extend Severity= iff(Severity between (7.0..8.9),\"High\",iff(Severity between (4.0..6.9), \"Medium\", iff(Severity between (1.0..3.9),\"Low\",\"Unknown\")))",
                                "queryFrequency": "PT5H",
                                "queryPeriod": "PT5H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSGuardDuty"
                                        ],
                                        "connectorId": "AWSS3"
                                    }
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "Arn"
                                            },
                                            {
                                                "identifier": "ObjectGuid",
                                                "columnName": "AWSAcoundId"
                                            }
                                        ]
                                    }
                                ],
                                "customDetails": {
                                    "ResourceTypeAffected": "ResourceTypeAffected",
                                    "ThreatPurpose": "ThreatPurpose",
                                    "UniqueFindingId": "UniqueFindingId"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "{{Description}}",
                                    "alertDisplayNameFormat": "{{Title}}",
                                    "alertTacticsColumnName": "ThreatPurpose",
                                    "alertSeverityColumnName": "Severity"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'bf0cde21-0c41-48f6-a40c-6b5bd71fa106'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 10",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'bf0cde21-0c41-48f6-a40c-6b5bd71fa106')]",
                                "contentId": "bf0cde21-0c41-48f6-a40c-6b5bd71fa106",
                                "kind": "AnalyticsRule",
                                "version": "1.0.2",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-a4iynamval25e",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-a4iynamval25e",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.2",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('f6928301-56da-4d2c-aabe-e1a552bc8892')),'1.0.1'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "f6928301-56da-4d2c-aabe-e1a552bc8892",
                "displayName": "ECR image scan findings high or critical",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "f6928301-56da-4d2c-aabe-e1a552bc8892",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "AWS ECR Image scan detected critical or high-severity vulnerabilities in your container image.",
                                "displayName": "ECR image scan findings high or critical",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName == \"DescribeImageScanFindings\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend repoName = tostring(parse_json(ResponseElements).repositoryName)\n| extend imageId = tostring(parse_json(ResponseElements).imageId.imageDigest)\n| extend Critical = toint(parse_json(ResponseElements).imageScanFindings.findingSeverityCounts.CRITICAL)\n| extend High = toint(parse_json(ResponseElements).imageScanFindings.findingSeverityCounts.HIGH)\n| where Critical > 0 or High > 0\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName \n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Execution"
                                ],
                                "techniques": [
                                    "T1204"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f6928301-56da-4d2c-aabe-e1a552bc8892'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 11",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f6928301-56da-4d2c-aabe-e1a552bc8892')]",
                                "contentId": "f6928301-56da-4d2c-aabe-e1a552bc8892",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-ix37xxpiv4qai",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-ix37xxpiv4qai",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('21702832-aff3-4bd6-a8e1-663b6818503d')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "21702832-aff3-4bd6-a8e1-663b6818503d",
                "displayName": "Suspicious command sent to EC2",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "21702832-aff3-4bd6-a8e1-663b6818503d",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "An attacker with the necessary permissions could be executing code remotely on a machine and saving the output to his own S3 bucket. Verify this action with the user identity.",
                                "displayName": "Suspicious command sent to EC2",
                                "enabled": false,
                                "query": "let command_executed = AWSCloudTrail\n| where EventName in (\"SendCommand\",\"CreateAssociation\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend params = tostring(parse_json(RequestParameters).parameters)\n| extend s3bucketCommand = tostring(parse_json(RequestParameters).outputS3BucketName)\n| extend s3bucketAssociation = tostring(parse_json(RequestParameters).outputLocation.s3Location.outputS3BucketName)\n| where isnotempty(params)\n| extend commandId = tostring(parse_json(ResponseElements).command.commandId)\n| extend associationId = tostring(parse_json(ResponseElements).associationDescription.associationId)\n| extend executionId = iff(isnotempty(commandId), commandId, associationId)\n| extend s3bucket = iff(isnotempty(s3bucketCommand), s3bucketCommand, s3bucketAssociation)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName;\nAWSCloudTrail\n| where EventName == \"PutObject\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend s3bucket = tostring(parse_json(RequestParameters).bucketName)\n| mv-expand todynamic(Resources)\n| extend accountId=tostring(todynamic(Resources.['accountId']))\n| where Resources contains \"accountId\" and accountId <> RecipientAccountId\n| join command_executed on s3bucket\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Execution"
                                ],
                                "techniques": [
                                    "T1204"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '21702832-aff3-4bd6-a8e1-663b6818503d'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 12",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '21702832-aff3-4bd6-a8e1-663b6818503d')]",
                                "contentId": "21702832-aff3-4bd6-a8e1-663b6818503d",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-glj6riic2wavu",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-glj6riic2wavu",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('0adab960-5565-4978-ba6d-044553e4acc4')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "0adab960-5565-4978-ba6d-044553e4acc4",
                "displayName": "Successful API executed from a Tor exit node",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "0adab960-5565-4978-ba6d-044553e4acc4",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "A successful API execution was detected from an IP address categorized as a TOR exit node by Threat Intelligence.",
                                "displayName": "Successful API executed from a Tor exit node",
                                "enabled": false,
                                "query": "let TorNodes = (\nexternaldata (TorIP:string)\n[h@'https://firewalliplists.gypthecat.com/lists/kusto/kusto-tor-exit.csv.zip']\nwith (ignoreFirstRecord=true));\nAWSCloudTrail\n| where SourceIpAddress in (TorNodes) and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName \n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Execution"
                                ],
                                "techniques": [
                                    "T1204"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '0adab960-5565-4978-ba6d-044553e4acc4'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 13",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '0adab960-5565-4978-ba6d-044553e4acc4')]",
                                "contentId": "0adab960-5565-4978-ba6d-044553e4acc4",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-6gblhdc4lvm4y",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-6gblhdc4lvm4y",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('9da99021-d318-4711-a78a-6dea76129b3a')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "9da99021-d318-4711-a78a-6dea76129b3a",
                "displayName": "GuardDuty detector disabled or suspended",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "9da99021-d318-4711-a78a-6dea76129b3a",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "GuardDuty Detector was disabled or suspended, possibly by an attacker trying to avoid detection of its malicious activities. Verify with the user identity that this activity is legitimate.",
                                "displayName": "GuardDuty detector disabled or suspended",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where (EventName == \"DeleteDetector\" and isempty(ErrorCode) and isempty( ErrorMessage)) or (EventName == \"UpdateDetector\" and tostring(parse_json(RequestParameters).enable) == \"false\" and isempty(ErrorCode) and isempty( ErrorMessage))\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "techniques": [
                                    "T1562"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '9da99021-d318-4711-a78a-6dea76129b3a'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 14",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '9da99021-d318-4711-a78a-6dea76129b3a')]",
                                "contentId": "9da99021-d318-4711-a78a-6dea76129b3a",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-k2rfc5fzyzyni",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-k2rfc5fzyzyni",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('efdc3cff-f006-426f-97fd-4657862f7b9a')),'1.0.1'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "efdc3cff-f006-426f-97fd-4657862f7b9a",
                "displayName": "CloudFormation policy created then used for privilege escalation",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "efdc3cff-f006-426f-97fd-4657862f7b9a",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected creation of new Cloudformation policy and usage of one of the attach policy events (AttachUserPolicy/AttachRolePolicy/AttachGroupPolicy). This might indicate a privilege escalation technique that attackers could use.",
                                "displayName": "CloudFormation policy created then used for privilege escalation",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\n  let createPolicy = \"CreatePolicy\";\n  let timeframe = 1d;\n  let lookback = 14d;\n  // Creating Master table with all the events to use with materialize for better performance\n  let EventInfo = AWSCloudTrail\n  | where TimeGenerated >= ago(lookback)\n  | where EventName in (EventNameList) or EventName == createPolicy;\n  //Checking for Policy creation event with Full Admin Privileges since lookback period.\n  let FullAdminPolicyEvents =  materialize(  EventInfo\n  | where TimeGenerated >= ago(lookback)\n  | where EventName == createPolicy\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and (((Action has \"iam:*\" or Action has \"iam:PassRole\") and Action has \"cloudformation:*\") or ((Action has \"iam:*\" or Action has \"iam:PassRole\") and Action contains \"cloudformation:DescribeStacks\" and Action contains \"cloudformation:CreateStack\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"cloudformation:Describe*\" and Action contains \"cloudformation:Create*\")) and Resource == \"*\" and Condition == \"\"\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | project-rename StartTime = TimeGenerated  );\n  let PolicyAttach = materialize(  EventInfo\n  | where TimeGenerated >= ago(timeframe)\n  | where EventName in (EventNameList) and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n  | summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName,   UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n  | extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n  | project EventSource, PolicyName, AttachEvent, AttachEventCount\n  );\n  // Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n  // These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\n  FullAdminPolicyEvents\n  | join kind=leftouter\n  (\n      PolicyAttach\n  )\n  on PolicyName\n  | project-away PolicyName1\n  | extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'efdc3cff-f006-426f-97fd-4657862f7b9a'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 15",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'efdc3cff-f006-426f-97fd-4657862f7b9a')]",
                                "contentId": "efdc3cff-f006-426f-97fd-4657862f7b9a",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-u4lml366e5it2",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-u4lml366e5it2",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('6f675c17-7a61-440c-abd1-c73ef4d748ec')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "6f675c17-7a61-440c-abd1-c73ef4d748ec",
                "displayName": "Creation of CRUD DynamoDB policy and then privilege escalation.",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "6f675c17-7a61-440c-abd1-c73ef4d748ec",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected creation of new CRUD DynamoDB policy and usage of one of the attach policy operations (AttachUserPolicy/AttachRolePolicy/AttachGroupPolicy). This might indicate a privilege escalation technique that attackers could use.",
                                "displayName": "Creation of CRUD DynamoDB policy and then privilege escalation.",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\nlet createPolicy = \"CreatePolicy\";\nlet timeframe = 1d;\nlet lookback = 14d;\n// Creating Master table with all the events to use with materialize for better performance\nlet EventInfo = AWSCloudTrail\n| where TimeGenerated >= ago(lookback)\n| where EventName in (EventNameList) or EventName == createPolicy;\n//Checking for Policy creation event with Full Admin Privileges since lookback period.\nlet FullAdminPolicyEvents =  materialize(  EventInfo\n| where TimeGenerated >= ago(lookback)\n| where EventName == createPolicy\n| extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and ((Action contains \"dynamodb:Create\" or Action contains \"dynamodb:Put\") and (Action contains \"dynamodb:Describe\" or Action contains \"dynamodb:Get\" or Action contains \"dynamodb:Scan\")  and Action contains \"dynamodb:Update\" and Action contains \"dynamodb:Delete\") and Resource == \"*\" and Condition == \"\"\n| distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| project-rename StartTime = TimeGenerated  );\nlet PolicyAttach = materialize(  EventInfo\n| where TimeGenerated >= ago(timeframe)\n| where EventName in (EventNameList) and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n| summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName,   UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n| extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n| project EventSource, PolicyName, AttachEvent, AttachEventCount\n);\n// Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n// These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\nFullAdminPolicyEvents\n| join kind=leftouter\n(\n    PolicyAttach\n)\non PolicyName\n| project-away PolicyName1\n| extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6f675c17-7a61-440c-abd1-c73ef4d748ec'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 16",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6f675c17-7a61-440c-abd1-c73ef4d748ec')]",
                                "contentId": "6f675c17-7a61-440c-abd1-c73ef4d748ec",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-gdtg4usieybb2",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-gdtg4usieybb2",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('8a607285-d95c-473d-8aab-59920de63af6')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "8a607285-d95c-473d-8aab-59920de63af6",
                "displayName": "Creation of new CRUD IAM policy and then privilege escalation.",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "8a607285-d95c-473d-8aab-59920de63af6",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected creation of new CRUD IAM policy and usage of one of the attach policy operations (AttachUserPolicy/AttachRolePolicy/AttachGroupPolicy). This might indicate a privilege escalation technique that attackers could use.",
                                "displayName": "Creation of new CRUD IAM policy and then privilege escalation.",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\nlet createPolicy = \"CreatePolicy\";\nlet timeframe = 1d;\nlet lookback = 14d;\n// Creating Master table with all the events to use with materialize for better performance\nlet EventInfo = AWSCloudTrail\n| where TimeGenerated >= ago(lookback)\n| where EventName in (EventNameList) or EventName == createPolicy;\n//Checking for Policy creation event with Full Admin Privileges since lookback period.\nlet FullAdminPolicyEvents =  materialize(  EventInfo\n| where TimeGenerated >= ago(lookback)\n| where EventName == createPolicy\n| extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and (Action contains \"iam:Create\" and (Action contains \"iam:Get\" or Action contains \"iam:List\")  and Action contains \"iam:Update\" and Action contains \"iam:Delete\") and Resource == \"*\" and Condition == \"\"\n| distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| project-rename StartTime = TimeGenerated  );\nlet PolicyAttach = materialize(  EventInfo\n| where TimeGenerated >= ago(timeframe)\n| where EventName in (EventNameList) and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n| summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName,   UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n| extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n| project EventSource, PolicyName, AttachEvent, AttachEventCount\n);\n// Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n// These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\nFullAdminPolicyEvents\n| join kind=leftouter\n(\n    PolicyAttach\n)\non PolicyName\n| project-away PolicyName1\n| extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8a607285-d95c-473d-8aab-59920de63af6'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 17",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8a607285-d95c-473d-8aab-59920de63af6')]",
                                "contentId": "8a607285-d95c-473d-8aab-59920de63af6",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-sbtlhiaebfoms",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-sbtlhiaebfoms",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('8e15998e-1e32-4b6d-abd1-e8482e8f3def')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "8e15998e-1e32-4b6d-abd1-e8482e8f3def",
                "displayName": "Creation of CRUD KMS policy and then privilege escalation",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "8e15998e-1e32-4b6d-abd1-e8482e8f3def",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected creation of new CRUD KMS policy and usage of one of the attach policy operations (AttachUserPolicy/AttachRolePolicy/AttachGroupPolicy). This might indicate a privilege escalation technique that attackers could use.",
                                "displayName": "Creation of CRUD KMS policy and then privilege escalation",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\nlet createPolicy = \"CreatePolicy\";\nlet timeframe = 1d;\nlet lookback = 14d;\n// Creating Master table with all the events to use with materialize for better performance\nlet EventInfo = AWSCloudTrail\n| where TimeGenerated >= ago(lookback)\n| where EventName in (EventNameList) or EventName == createPolicy;\n//Checking for Policy creation event with Full Admin Privileges since lookback period.\nlet FullAdminPolicyEvents =  materialize(  EventInfo\n| where TimeGenerated >= ago(lookback)\n| where EventName == createPolicy\n| extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and (Action contains \"kms:Create\" and (Action contains \"kms:Get\" or Action contains \"kms:Describe\")  and (Action contains \"kms:Disable\" or Action contains \"kms:Enable\") and Action contains \"kms:Delete\") and Resource == \"*\" and Condition == \"\"\n| distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| project-rename StartTime = TimeGenerated  );\nlet PolicyAttach = materialize(  EventInfo\n| where TimeGenerated >= ago(timeframe)\n| where EventName in (EventNameList) and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n| summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName,   UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n| extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n| project EventSource, PolicyName, AttachEvent, AttachEventCount\n);\n// Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n// These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\nFullAdminPolicyEvents\n| join kind=leftouter\n(\n    PolicyAttach\n)\non PolicyName\n| project-away PolicyName1\n| extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8e15998e-1e32-4b6d-abd1-e8482e8f3def'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 18",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8e15998e-1e32-4b6d-abd1-e8482e8f3def')]",
                                "contentId": "8e15998e-1e32-4b6d-abd1-e8482e8f3def",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-vpliqznntkjzo",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-vpliqznntkjzo",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('467cbe7e-e6d4-4f4e-8e44-84dd01932c32')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "467cbe7e-e6d4-4f4e-8e44-84dd01932c32",
                "displayName": "Created CRUD S3 policy and then privilege escalation",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "467cbe7e-e6d4-4f4e-8e44-84dd01932c32",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected creation of new CRUD S3 policy and afterwards used one of the attach policy operations (AttachUserPolicy/AttachRolePolicy/AttachGroupPolicy). This might indicate a privilege escalation technique that attackers could use.",
                                "displayName": "Created CRUD S3 policy and then privilege escalation",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\nlet createPolicy = \"CreatePolicy\";\nlet timeframe = 1d;\nlet lookback = 14d;\n// Creating Master table with all the events to use with materialize for better performance\nlet EventInfo = AWSCloudTrail\n| where TimeGenerated >= ago(lookback)\n| where EventName in (EventNameList) or EventName == createPolicy;\n//Checking for Policy creation event with Full Admin Privileges since lookback period.\nlet FullAdminPolicyEvents =  materialize(  EventInfo\n| where TimeGenerated >= ago(lookback)\n| where EventName == createPolicy\n| extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and (Action contains \"s3:Create\" and Action contains \"s3:Get\" and Action contains \"s3:Put\" and Action contains \"s3:Delete\") and Resource == \"*\" and Condition == \"\"\n| distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| project-rename StartTime = TimeGenerated  );\nlet PolicyAttach = materialize(  EventInfo\n| where TimeGenerated >= ago(timeframe)\n| where EventName in (EventNameList) and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n| summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName, UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n| extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n| project EventSource, PolicyName, AttachEvent, AttachEventCount\n);\n// Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n// These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\nFullAdminPolicyEvents\n| join kind=leftouter\n(\n    PolicyAttach\n)\non PolicyName\n| project-away PolicyName1\n| extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '467cbe7e-e6d4-4f4e-8e44-84dd01932c32'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 19",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '467cbe7e-e6d4-4f4e-8e44-84dd01932c32')]",
                                "contentId": "467cbe7e-e6d4-4f4e-8e44-84dd01932c32",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-qqprun6gr3yau",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-qqprun6gr3yau",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('22115d3c-e87c-485a-9130-33797d619124')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "22115d3c-e87c-485a-9130-33797d619124",
                "displayName": "Creation of CRUD Lambda policy and then privilege escalation",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "22115d3c-e87c-485a-9130-33797d619124",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected creation of new CRUD Lambda policy and usage of the attach policy events (AttachUserPolicy/AttachRolePolicy/AttachGroupPolicy). This might indicate a privilege escalation technique that attackers could use.",
                                "displayName": "Creation of CRUD Lambda policy and then privilege escalation",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\nlet createPolicy = \"CreatePolicy\";\nlet timeframe = 1d;\nlet lookback = 14d;\n// Creating Master table with all the events to use with materialize for better performance\nlet EventInfo = AWSCloudTrail\n| where TimeGenerated >= ago(lookback)\n| where EventName in (EventNameList) or EventName == createPolicy;\n//Checking for Policy creation event with Full Admin Privileges since lookback period.\nlet FullAdminPolicyEvents =  materialize(  EventInfo\n| where TimeGenerated >= ago(lookback)\n| where EventName == createPolicy\n| extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and (Action contains \"lambda:Create\" and Action contains \"lambda:Get\" and Action contains \"lambda:Update\" and Action contains \"kms:Delete\") and Resource == \"*\" and Condition == \"\"\n| distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| project-rename StartTime = TimeGenerated  );\nlet PolicyAttach = materialize(  EventInfo\n| where TimeGenerated >= ago(timeframe)\n| where EventName in (EventNameList) and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n| summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName, UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n| extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n| project EventSource, PolicyName, AttachEvent, AttachEventCount\n);\n// Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n// These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\nFullAdminPolicyEvents\n| join kind=leftouter\n(\n    PolicyAttach\n)\non PolicyName\n| project-away PolicyName1\n| extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '22115d3c-e87c-485a-9130-33797d619124'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 20",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '22115d3c-e87c-485a-9130-33797d619124')]",
                                "contentId": "22115d3c-e87c-485a-9130-33797d619124",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-qupa5eygb5pck",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-qupa5eygb5pck",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('6009c632-94e9-4ffb-a11a-b4b99f457f88')),'1.0.1'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "6009c632-94e9-4ffb-a11a-b4b99f457f88",
                "displayName": "Creation of DataPipeline policy and then privilege escalation.",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "6009c632-94e9-4ffb-a11a-b4b99f457f88",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected creation of new Datapipeline policy and usage of the attach policy operations (AttachUserPolicy/AttachRolePolicy/AttachGroupPolicy). This might indicate a privilege escalation technique that attackers could use.",
                                "displayName": "Creation of DataPipeline policy and then privilege escalation.",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\n  let createPolicy = \"CreatePolicy\";\n  let timeframe = 1d;\n  let lookback = 14d;\n  // Creating Master table with all the events to use with materialize for better performance\n  let EventInfo = AWSCloudTrail\n  | where TimeGenerated >= ago(lookback)\n  | where EventName in (EventNameList) or EventName == createPolicy;\n  //Checking for Policy creation event with Full Admin Privileges since lookback period.\n  let FullAdminPolicyEvents =  materialize(  EventInfo\n  | where TimeGenerated >= ago(lookback)\n  | where EventName == createPolicy\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and (((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"datapipeline:*\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"datapipeline:CreatePipeline\" and Action contains \"datapipeline:PutPipelineDefinition\" and Action contains \"datapipeline:ActivatePipeline\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"datapipeline:Create*\" and Action contains \"datapipeline:Put*\" and Action contains \"datapipeline:Activate*\")) and Resource == \"*\" and Condition == \"\"\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | project-rename StartTime = TimeGenerated  );\n  let PolicyAttach = materialize(  EventInfo\n  | where TimeGenerated >= ago(timeframe)\n  | where EventName in (EventNameList) and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n  | summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName,   UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n  | extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n  | project EventSource, PolicyName, AttachEvent, AttachEventCount\n  );\n  // Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n  // These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\n  FullAdminPolicyEvents\n  | join kind=leftouter\n  (\n      PolicyAttach\n  )\n  on PolicyName\n  | project-away PolicyName1\n  | extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6009c632-94e9-4ffb-a11a-b4b99f457f88'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 21",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6009c632-94e9-4ffb-a11a-b4b99f457f88')]",
                                "contentId": "6009c632-94e9-4ffb-a11a-b4b99f457f88",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-wknponqcyqfkq",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-wknponqcyqfkq",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('a694e977-740c-4578-9f8f-5e39029f1d23')),'1.0.1'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "a694e977-740c-4578-9f8f-5e39029f1d23",
                "displayName": "Creation of EC2 policy and then privilege escalation",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "a694e977-740c-4578-9f8f-5e39029f1d23",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected creation of new EC2 policy and afterwards used one of the attach policy operations (AttachUserPolicy/AttachRolePolicy/AttachGroupPolicy). This might indicate a privilege escalation technique that attackers could use.",
                                "displayName": "Creation of EC2 policy and then privilege escalation",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\n  let createPolicy = \"CreatePolicy\";\n  let timeframe = 1d;\n  let lookback = 14d;\n  // Creating Master table with all the events to use with materialize for better performance\n  let EventInfo = AWSCloudTrail\n  | where TimeGenerated >= ago(lookback)\n  | where EventName in (EventNameList) or EventName == createPolicy;\n  //Checking for Policy creation event with Full Admin Privileges since lookback period.\n  let FullAdminPolicyEvents =  materialize(  EventInfo\n  | where TimeGenerated >= ago(lookback)\n  | where EventName == createPolicy\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and ((((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"ec2:*\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"ec2:RunInstances\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"ec2:Run*\")) or (Action contains \"ec2:*\") or (Action contains \"ec2:ListInstances\" and Action contains \"ec2:StartInstance\" and Action contains \"ec2:ModifyInstanceAttribute\") or (Action contains \"ec2:List*\" and Action contains \"ec2:Start*\" and Action contains \"ec2:Modify*\")) and Resource == \"*\" and Condition == \"\"\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | project-rename StartTime = TimeGenerated  );\n  let PolicyAttach = materialize(  EventInfo\n  | where TimeGenerated >= ago(timeframe)\n  | where EventName in (EventNameList) and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n  | summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName,   UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n  | extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n  | project EventSource, PolicyName, AttachEvent, AttachEventCount\n  );\n  // Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n  // These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\n  FullAdminPolicyEvents\n  | join kind=leftouter\n  (\n      PolicyAttach\n  )\n  on PolicyName\n  | project-away PolicyName1\n  | extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a694e977-740c-4578-9f8f-5e39029f1d23'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 22",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a694e977-740c-4578-9f8f-5e39029f1d23')]",
                                "contentId": "a694e977-740c-4578-9f8f-5e39029f1d23",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-7idmeiv22ozgw",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-7idmeiv22ozgw",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('56626956-304f-4408-8ea6-7ba5746ce09e')),'1.0.1'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "56626956-304f-4408-8ea6-7ba5746ce09e",
                "displayName": "Creation of Glue policy and then privilege escalation",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "56626956-304f-4408-8ea6-7ba5746ce09e",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected creation of new Glue policy and usage one of the attach policy operations (AttachUserPolicy/AttachRolePolicy/AttachGroupPolicy). This might indicate a privilege escalation technique that attackers could use.",
                                "displayName": "Creation of Glue policy and then privilege escalation",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\n  let createPolicy = \"CreatePolicy\";\n  let timeframe = 1d;\n  let lookback = 14d;\n  // Creating Master table with all the events to use with materialize for better performance\n  let EventInfo = AWSCloudTrail\n  | where TimeGenerated >= ago(lookback)\n  | where EventName in (EventNameList) or EventName == createPolicy;\n  //Checking for Policy creation event with Full Admin Privileges since lookback period.\n  let FullAdminPolicyEvents =  materialize(  EventInfo\n  | where TimeGenerated >= ago(lookback)\n  | where EventName == createPolicy\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and ((((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"glue:*\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"glue:CreateDevEndpoint\" and Action contains \"glue:GetDevEndpoints\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"glue:Create*\" and Action contains \"glue:Get*\")) or (Action contains \"glue:*\") or (Action contains \"glue:GetDevEndpoints\" and Action contains \"glue:UpdateDevEndpoint\") or (Action contains \"glue:Get*\" and Action contains \"glue:Update*\")) and Resource == \"*\" and Condition == \"\"\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | project-rename StartTime = TimeGenerated  );\n  let PolicyAttach = materialize(  EventInfo\n  | where TimeGenerated >= ago(timeframe)\n  | where EventName in (EventNameList) and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n  | summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName,   UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n  | extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n  | project EventSource, PolicyName, AttachEvent, AttachEventCount\n  );\n  // Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n  // These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\n  FullAdminPolicyEvents\n  | join kind=leftouter\n  (\n      PolicyAttach\n  )\n  on PolicyName\n  | project-away PolicyName1\n  | extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '56626956-304f-4408-8ea6-7ba5746ce09e'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 23",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '56626956-304f-4408-8ea6-7ba5746ce09e')]",
                                "contentId": "56626956-304f-4408-8ea6-7ba5746ce09e",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-xio24gnvjbyp2",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-xio24gnvjbyp2",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('796a45ee-220b-42be-8415-c8c933cf3b6d')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "796a45ee-220b-42be-8415-c8c933cf3b6d",
                "displayName": "Creation of Lambda policy and then privilege escalation",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "796a45ee-220b-42be-8415-c8c933cf3b6d",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected creation of new Lambda policy and usage of one of the attach policy operations (AttachUserPolicy/AttachRolePolicy/AttachGroupPolicy). This might indicate a privilege escalation technique that attackers could use.",
                                "displayName": "Creation of Lambda policy and then privilege escalation",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\nlet createPolicy = \"CreatePolicy\";\nlet timeframe = 1d;\nlet lookback = 14d;\n// Creating Master table with all the events to use with materialize for better performance\nlet EventInfo = AWSCloudTrail\n| where TimeGenerated >= ago(lookback)\n| where EventName in (EventNameList) or EventName == createPolicy;\n//Checking for Policy creation event with Full Admin Privileges since lookback period.\nlet FullAdminPolicyEvents =  materialize(  EventInfo\n| where TimeGenerated >= ago(lookback)\n| where EventName == createPolicy\n| extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and ((((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:*\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:CreateFunction\" and Action contains \"lambda:InvokeFunction\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:Create*\" and Action contains \"lambda:Invoke*\")) or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:*\" and Action contains \"dynamodb:*\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:CreateFunction\" and Action contains \"lambda:CreateEventSourceMapping\" and Action contains \"dynamodb:PutItem\" and Action contains \"dynamodb:CreateTable\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:Create*\" and Action contains \"dynamodb:Put*\" and Action contains \"dynamodb:Create*\")) and Resource == \"*\" and Condition == \"\"\n| distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| project-rename StartTime = TimeGenerated  );\nlet PolicyAttach = materialize(  EventInfo\n| where TimeGenerated >= ago(timeframe)\n| where EventName in (EventNameList) and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n| summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName,   UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n| extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n| project EventSource, PolicyName, AttachEvent, AttachEventCount\n);\n// Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n// These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\nFullAdminPolicyEvents\n| join kind=leftouter\n(\n    PolicyAttach\n)\non PolicyName\n| project-away PolicyName1\n| extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '796a45ee-220b-42be-8415-c8c933cf3b6d'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 24",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '796a45ee-220b-42be-8415-c8c933cf3b6d')]",
                                "contentId": "796a45ee-220b-42be-8415-c8c933cf3b6d",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-y27pstr4omiyq",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-y27pstr4omiyq",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('aaa2c05e-fdd4-4fa0-9072-6cffe3641b34')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "aaa2c05e-fdd4-4fa0-9072-6cffe3641b34",
                "displayName": "Creation of SSM policy and then privilege escalation",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "aaa2c05e-fdd4-4fa0-9072-6cffe3641b34",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected creation of new SSM policy and afterwards used one of the attach policy operations (AttachUserPolicy/AttachRolePolicy/AttachGroupPolicy). This might indicate a privilege escalation technique that attackers could use.",
                                "displayName": "Creation of SSM policy and then privilege escalation",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\n let createPolicy = \"CreatePolicy\";\n let timeframe = 1d;\n let lookback = 14d;\n // Creating Master table with all the events to use with materialize for better performance\n let EventInfo = AWSCloudTrail\n | where TimeGenerated >= ago(lookback)\n | where EventName in (EventNameList) or EventName == createPolicy;\n //Checking for Policy creation event with Full Admin Privileges since lookback period.\n let FullAdminPolicyEvents =  materialize(  EventInfo\n | where TimeGenerated >= ago(lookback)\n | where EventName == createPolicy\n | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n | mvexpand Statement\n | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n | extend Action = tostring(Action)\n | where Effect =~ \"Allow\" and (Action contains \"ssm:*\" or Action contains \"ssm:Create*\" or Action contains \"ssm:CreateAssociation\") and Resource == \"*\" and Condition == \"\"\n | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n | project-rename StartTime = TimeGenerated  );\n let PolicyAttach = materialize(  EventInfo\n | where TimeGenerated >= ago(timeframe)\n | where EventName in (EventNameList) and isempty(ErrorCode) and isempty(ErrorMessage)\n | extend PolicyName = tostring(split(tostring(parse_json(RequestParameters).policyArn),\"/\")[1])\n | summarize AttachEventCount=count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventSource, EventName,   UserIdentityType , UserIdentityArn, SourceIpAddress, UserIdentityUserName = iff(isnotempty(UserIdentityUserName),   UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1])), PolicyName\n | extend AttachEvent = pack(\"StartTime\", StartTime, \"EndTime\", EndTime, \"EventName\", EventName, \"UserIdentityType\",   UserIdentityType, \"UserIdentityArn\", UserIdentityArn, \"SourceIpAddress\", SourceIpAddress, \"UserIdentityUserName\", UserIdentityUserName)\n | project EventSource, PolicyName, AttachEvent, AttachEventCount\n );\n // Joining the list of PolicyNames and checking if it has been attached to any Roles/Users/Groups.\n // These Roles/Users/Groups will be Privileged and can be used by adversaries as pivot point for privilege escalation via multiple ways.\n FullAdminPolicyEvents\n | join kind=leftouter\n (\n     PolicyAttach\n )\n on PolicyName\n | project-away PolicyName1\n | extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'aaa2c05e-fdd4-4fa0-9072-6cffe3641b34'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 25",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'aaa2c05e-fdd4-4fa0-9072-6cffe3641b34')]",
                                "contentId": "aaa2c05e-fdd4-4fa0-9072-6cffe3641b34",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-fmycyjslymafo",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-fmycyjslymafo",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('454133a7-5427-4a7c-bdc4-0adfa84dda16')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "454133a7-5427-4a7c-bdc4-0adfa84dda16",
                "displayName": "Creating keys with encrypt policy without MFA",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "454133a7-5427-4a7c-bdc4-0adfa84dda16",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detection of KMS keys where action kms:Encrypt is accessible for everyone (also outside of your organization). This is an idicator that your account is compromised and the attacker uses the encryption key to compromise another company.",
                                "displayName": "Creating keys with encrypt policy without MFA",
                                "enabled": false,
                                "query": "let check_actions = AWSCloudTrail\n| where (EventName == \"CreateKey\" or EventName == \"PutKeyPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend state=parse_json(parse_json(replace_string(tostring(parse_json(RequestParameters)['policy']),'\\\\\"','\"')).['Statement'])\n| mv-expand state\n| extend Action= tostring(parse_json(state.['Action'][0])), Effect=tostring(parse_json(state.['Effect'])),\n         Principal=tostring(parse_json(state.['Principal']))\n| where (Action == \"kms:Encrypt\" or Action == \"kms:*\") and (Effect == 'Allow') and (Principal has \"*\")\n| distinct AwsEventId;\nAWSCloudTrail\n| where (EventName == \"CreateKey\" or EventName == \"PutKeyPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| join kind=inner (check_actions) on AwsEventId\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n| project-away AwsEventId1\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Impact"
                                ],
                                "techniques": [
                                    "T1485"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '454133a7-5427-4a7c-bdc4-0adfa84dda16'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 26",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '454133a7-5427-4a7c-bdc4-0adfa84dda16')]",
                                "contentId": "454133a7-5427-4a7c-bdc4-0adfa84dda16",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-opmr5ejt7j2h4",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-opmr5ejt7j2h4",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('19602494-94af-43c8-90ba-eb0e14999612')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "19602494-94af-43c8-90ba-eb0e14999612",
                "displayName": "Automatic image scanning disabled for ECR",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "19602494-94af-43c8-90ba-eb0e14999612",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Image Scanning for ECR was disabled, which could lead to missing vulnerable container images in your environment. Attackers could disable the Image Scanning for defense evasion purposes.",
                                "displayName": "Automatic image scanning disabled for ECR",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName == \"PutImageScanningConfiguration\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend scanOnPush = parse_json(tostring((parse_json(RequestParameters).imageScanningConfiguration))).scanOnPush\n| where scanOnPush == false\n| distinct TimeGenerated, EventName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "techniques": [
                                    "T1562"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '19602494-94af-43c8-90ba-eb0e14999612'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 27",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '19602494-94af-43c8-90ba-eb0e14999612')]",
                                "contentId": "19602494-94af-43c8-90ba-eb0e14999612",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-plythscrnk7by",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-plythscrnk7by",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('633a91df-d031-4b6e-a413-607a61540559')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "633a91df-d031-4b6e-a413-607a61540559",
                "displayName": "Changes made to AWS CloudTrail logs",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "633a91df-d031-4b6e-a413-607a61540559",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Attackers often try to hide their steps by deleting or stopping the collection of logs that could show their activity. \nThis alert identifies any manipulation of AWS CloudTrail, Cloudwatch/EventBridge or VPC Flow logs.\nMore Information: AWS CloudTrail API: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_Operations.html\nAWS Cloudwatch/Eventbridge API: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_Operations.html\nAWS DelteteFlowLogs API : https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html ",
                                "displayName": "Changes made to AWS CloudTrail logs",
                                "enabled": false,
                                "query": "let EventNameList = dynamic([\"UpdateTrail\",\"DeleteTrail\",\"StopLogging\",\"DeleteFlowLogs\",\"DeleteEventBus\",\"DeleteLogGroup\"]);\nAWSCloudTrail\n| where (EventName in~ (EventNameList) or (EventName == \"UpdateTrail\" and (parse_json(RequestParameters).enableLogFileValidation) == false) or (EventName == \"UpdateTrail\" and (parse_json(RequestParameters).isMultiRegionTrail) == false)) and isempty(ErrorMessage) and isempty(ErrorCode)\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \nUserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserIdentityUserName, IPCustomEntity = SourceIpAddress\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '633a91df-d031-4b6e-a413-607a61540559'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 28",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '633a91df-d031-4b6e-a413-607a61540559')]",
                                "contentId": "633a91df-d031-4b6e-a413-607a61540559",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-t7nzs3ab55gyq",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-t7nzs3ab55gyq",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('f8ea7d50-e33b-4b9d-9c3e-a59fcbcee281')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "f8ea7d50-e33b-4b9d-9c3e-a59fcbcee281",
                "displayName": "Network ACL with all the open ports to a specified CIDR",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "f8ea7d50-e33b-4b9d-9c3e-a59fcbcee281",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected network ACL with all the ports open to a specified CIDR. This could lead to potential lateral movements or initial access attacks. Make sure to mitigate this risk.",
                                "displayName": "Network ACL with all the open ports to a specified CIDR",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName in ('CreateNetworkAclEntry', 'ReplaceNetworkAclEntry') and isempty(ErrorMessage) and isempty(ErrorCode)\n| extend ruleAction = tostring(parse_json(RequestParameters)['ruleAction']),\n         egress=parse_json(RequestParameters)['egress'],\n         total_ports=(toint(parse_json(parse_json(RequestParameters)['portRange'])['to']) - toint(parse_json(parse_json(RequestParameters)['portRange'])['from'])),\n         aclProtocol=parse_json(RequestParameters)['aclProtocol']\n| where isnotempty(total_ports)\n| where ruleAction == 'allow' and egress == false and aclProtocol == '-1' and (total_ports > 1024)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "techniques": [
                                    "T1562"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f8ea7d50-e33b-4b9d-9c3e-a59fcbcee281'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 29",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f8ea7d50-e33b-4b9d-9c3e-a59fcbcee281')]",
                                "contentId": "f8ea7d50-e33b-4b9d-9c3e-a59fcbcee281",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-r5jxewaoribie",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-r5jxewaoribie",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('60dfc193-0f73-4279-b43c-110ade02b201')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "60dfc193-0f73-4279-b43c-110ade02b201",
                "displayName": "Suspicious overly permessive KMS key policy created",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "60dfc193-0f73-4279-b43c-110ade02b201",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "An overly permissive key policy was created, resulting in KMS keys where the kms:Encrypt action is accessible to everyone (even outside of the organization). This could mean that your account is compromised and that the attacker is using the encryption key to compromise other organizations.",
                                "displayName": "Suspicious overly permessive KMS key policy created",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName in (\"CreateKey\",\"PutKeyPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policy))).Statement\n| mvexpand Statement\n| extend Action = tostring(parse_json(Statement).Action), Effect = tostring(parse_json(Statement).Effect), Principal = iff(isnotempty(tostring(parse_json(Statement).Principal.AWS)),tostring(parse_json(Statement).Principal.AWS), tostring(parse_json(Statement).Principal))\n| where Effect =~ \"Allow\" and (Action == \"kms:Encrypt\" or Action == \"kms:*\") and Principal == \"*\"\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Impact"
                                ],
                                "techniques": [
                                    "T1486"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '60dfc193-0f73-4279-b43c-110ade02b201'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 30",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '60dfc193-0f73-4279-b43c-110ade02b201')]",
                                "contentId": "60dfc193-0f73-4279-b43c-110ade02b201",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-qdqrttrh6popo",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-qdqrttrh6popo",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('139e7116-3884-4246-9978-c8f740770bdf')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "139e7116-3884-4246-9978-c8f740770bdf",
                "displayName": "Privilege escalation with AdministratorAccess managed policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "139e7116-3884-4246-9978-c8f740770bdf",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy on AdministratorAccess managed policy. Attackers could use these events for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation with AdministratorAccess managed policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where  EventName in (\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| where tostring(parse_json(RequestParameters).policyArn) startswith \"arn:aws:iam::aws:policy/AdministratorAccess\"\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent,UserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, RequestParameters, UserIdentityArn, ResponseElements\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityAccountId\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '139e7116-3884-4246-9978-c8f740770bdf'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 31",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '139e7116-3884-4246-9978-c8f740770bdf')]",
                                "contentId": "139e7116-3884-4246-9978-c8f740770bdf",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-d5aitsb2eaepo",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-d5aitsb2eaepo",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('49ce5322-60d7-4b02-ad79-99f650aa5790')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "49ce5322-60d7-4b02-ad79-99f650aa5790",
                "displayName": "Privilege escalation with admin managed policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "49ce5322-60d7-4b02-ad79-99f650aa5790",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy on admin managed policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation with admin managed policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where  EventName in (\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| where tostring(parse_json(RequestParameters).policyArn) contains \"Admin\" and tostring(parse_json(RequestParameters).policyArn) !contains \"FullAccess\" and tostring(parse_json(RequestParameters).policyArn) !startswith \"arn:aws:iam::aws:policy/AdministratorAccess\"\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent,UserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, RequestParameters, ResponseElements, UserIdentityArn\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityAccountId\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '49ce5322-60d7-4b02-ad79-99f650aa5790'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 32",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '49ce5322-60d7-4b02-ad79-99f650aa5790')]",
                                "contentId": "49ce5322-60d7-4b02-ad79-99f650aa5790",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-lsys23cmxe5em",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-lsys23cmxe5em",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('afb4191b-a142-4065-a0da-f721ee3d006c')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "afb4191b-a142-4065-a0da-f721ee3d006c",
                "displayName": "Privilege escalation with FullAccess managed policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "afb4191b-a142-4065-a0da-f721ee3d006c",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy on FullAccess managed policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation with FullAccess managed policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where  EventName in (\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| where tostring(parse_json(RequestParameters).policyArn) has \"FullAccess\" and tostring(parse_json(RequestParameters).policyArn) !has \"Admin\"\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent,UserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, RequestParameters, UserIdentityArn, ResponseElements\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityAccountId\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'afb4191b-a142-4065-a0da-f721ee3d006c'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 33",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'afb4191b-a142-4065-a0da-f721ee3d006c')]",
                                "contentId": "afb4191b-a142-4065-a0da-f721ee3d006c",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-ajymznxhojafs",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-ajymznxhojafs",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('719d5204-10ab-4b1f-aee1-da7326750260')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "719d5204-10ab-4b1f-aee1-da7326750260",
                "displayName": "Privilege escalation via CloudFormation policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "719d5204-10ab-4b1f-aee1-da7326750260",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy on CloudFormation policy. Attackers could use these events for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation via CloudFormation policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n  | where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and (((Action has \"iam:*\" or Action has \"iam:PassRole\") and Action has \"cloudformation:*\") or ((Action has \"iam:*\" or Action has \"iam:PassRole\") and Action contains \"cloudformation:DescribeStacks\" and Action contains \"cloudformation:CreateStack\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"cloudformation:Describe*\" and Action contains \"cloudformation:Create*\")) and Resource == \"*\" and Condition == \"\"\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '719d5204-10ab-4b1f-aee1-da7326750260'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 34",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '719d5204-10ab-4b1f-aee1-da7326750260')]",
                                "contentId": "719d5204-10ab-4b1f-aee1-da7326750260",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-5xvg546cmps7m",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-5xvg546cmps7m",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('b9be2aa6-911d-4131-8658-d2a537ed49f4')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "b9be2aa6-911d-4131-8658-d2a537ed49f4",
                "displayName": "Privilege escalation via CRUD DynamoDB policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "b9be2aa6-911d-4131-8658-d2a537ed49f4",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy by CRUD DynamoDB Policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation via CRUD DynamoDB policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and ((Action contains \"dynamodb:Create\" or Action contains \"dynamodb:Put\") and (Action contains \"dynamodb:Describe\" or Action contains \"dynamodb:Get\" or Action contains \"dynamodb:Scan\")  and Action contains \"dynamodb:Update\" and Action contains \"dynamodb:Delete\") and Resource == \"*\" and Condition == \"\"\n| distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b9be2aa6-911d-4131-8658-d2a537ed49f4'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 35",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b9be2aa6-911d-4131-8658-d2a537ed49f4')]",
                                "contentId": "b9be2aa6-911d-4131-8658-d2a537ed49f4",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-3qnf6vff4mq7i",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-3qnf6vff4mq7i",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('e20d35a3-4fec-4c8b-81b1-fc33b41990b0')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "e20d35a3-4fec-4c8b-81b1-fc33b41990b0",
                "displayName": "Privilege escalation via CRUD IAM policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "e20d35a3-4fec-4c8b-81b1-fc33b41990b0",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy by CRUD IAM policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation via CRUD IAM policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n  | where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and (Action contains \"iam:Create\" and (Action contains \"iam:Get\" or Action contains \"iam:List\")  and Action contains \"iam:Update\" and Action contains \"iam:Delete\") and Resource == \"*\" and Condition == \"\"\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e20d35a3-4fec-4c8b-81b1-fc33b41990b0'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 36",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e20d35a3-4fec-4c8b-81b1-fc33b41990b0')]",
                                "contentId": "e20d35a3-4fec-4c8b-81b1-fc33b41990b0",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-s4rbus6meqdqo",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-s4rbus6meqdqo",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('d7c39e15-997f-49e5-a782-73bf07db8aa5')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "d7c39e15-997f-49e5-a782-73bf07db8aa5",
                "displayName": "Privilege escalation via CRUD KMS policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "d7c39e15-997f-49e5-a782-73bf07db8aa5",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy by CRUD KMS policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation via CRUD KMS policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and (Action contains \"kms:Create\" and (Action contains \"kms:Get\" or Action contains \"kms:Describe\")  and (Action contains \"kms:Disable\" or Action contains \"kms:Enable\") and Action contains \"kms:Delete\") and Resource == \"*\" and Condition == \"\"\n| distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd7c39e15-997f-49e5-a782-73bf07db8aa5'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 37",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd7c39e15-997f-49e5-a782-73bf07db8aa5')]",
                                "contentId": "d7c39e15-997f-49e5-a782-73bf07db8aa5",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-ko3bkz7x3roew",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-ko3bkz7x3roew",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('d0953d50-3dc1-4fa3-80fa-4d3e973a0959')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "d0953d50-3dc1-4fa3-80fa-4d3e973a0959",
                "displayName": "Privilege escalation via CRUD Lambda policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "d0953d50-3dc1-4fa3-80fa-4d3e973a0959",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy by CRUD Lambda policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation via CRUD Lambda policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and (Action contains \"lambda:Create\" and Action contains \"lambda:Get\" and Action contains \"lambda:Update\" and Action contains \"kms:Delete\") and Resource == \"*\" and Condition == \"\"\n| distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd0953d50-3dc1-4fa3-80fa-4d3e973a0959'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 38",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd0953d50-3dc1-4fa3-80fa-4d3e973a0959')]",
                                "contentId": "d0953d50-3dc1-4fa3-80fa-4d3e973a0959",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-pxmyeags4op6u",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-pxmyeags4op6u",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('fc3061bb-319c-4fe9-abe2-f59899a6d907')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "fc3061bb-319c-4fe9-abe2-f59899a6d907",
                "displayName": "Privilege escalation via CRUD S3 policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "fc3061bb-319c-4fe9-abe2-f59899a6d907",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy by CRUD S3 Policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation via CRUD S3 policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and (Action contains \"s3:Create\" and Action contains \"s3:Get\" and Action contains \"s3:Put\" and Action contains \"s3:Delete\") and Resource == \"*\" and Condition == \"\"\n| distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'fc3061bb-319c-4fe9-abe2-f59899a6d907'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 39",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'fc3061bb-319c-4fe9-abe2-f59899a6d907')]",
                                "contentId": "fc3061bb-319c-4fe9-abe2-f59899a6d907",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-3sxagoea3cwbs",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-3sxagoea3cwbs",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('48896551-1c28-4a09-8388-e51e5a927d23')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "48896551-1c28-4a09-8388-e51e5a927d23",
                "displayName": "Privilege escalation via DataPipeline policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "48896551-1c28-4a09-8388-e51e5a927d23",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy on Datapipeline policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation via DataPipeline policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n  | where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and (((Action has \"iam:*\" or Action has \"iam:PassRole\") and Action has \"datapipeline:*\") or ((Action has \"iam:*\" or Action has \"iam:PassRole\") and Action has \"datapipeline:CreatePipeline\" and Action has \"datapipeline:PutPipelineDefinition\" and Action has \"datapipeline:ActivatePipeline\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"datapipeline:Create*\" and Action contains \"datapipeline:Put*\" and Action contains \"datapipeline:Activate*\")) and Resource == \"*\" and isempty(Condition)\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '48896551-1c28-4a09-8388-e51e5a927d23'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 40",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '48896551-1c28-4a09-8388-e51e5a927d23')]",
                                "contentId": "48896551-1c28-4a09-8388-e51e5a927d23",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-po5fuac2qpttk",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-po5fuac2qpttk",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('a2b2a984-c820-4d93-830e-139bffd81fa3')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "a2b2a984-c820-4d93-830e-139bffd81fa3",
                "displayName": "Privilege escalation via EC2 policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "a2b2a984-c820-4d93-830e-139bffd81fa3",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy on EC2 policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation via EC2 policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n  | where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and ((((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"ec2:*\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"ec2:RunInstances\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"ec2:Run*\")) or (Action contains \"ec2:*\") or (Action contains \"ec2:ListInstances\" and Action contains \"ec2:StartInstance\" and Action contains \"ec2:ModifyInstanceAttribute\") or (Action contains \"ec2:List*\" and Action contains \"ec2:Start*\" and Action contains \"ec2:Modify*\")) and Resource == \"*\" and Condition == \"\"\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a2b2a984-c820-4d93-830e-139bffd81fa3'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 41",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a2b2a984-c820-4d93-830e-139bffd81fa3')]",
                                "contentId": "a2b2a984-c820-4d93-830e-139bffd81fa3",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-hhfueq7p3mkvu",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-hhfueq7p3mkvu",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('370f0e5e-da1d-4a14-8ced-d1d7ab66a8d7')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "370f0e5e-da1d-4a14-8ced-d1d7ab66a8d7",
                "displayName": "Privilege escalation via Glue policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "370f0e5e-da1d-4a14-8ced-d1d7ab66a8d7",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy on Glue policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation via Glue policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n  | where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and ((((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"glue:*\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"glue:CreateDevEndpoint\" and Action contains \"glue:GetDevEndpoints\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"glue:Create*\" and Action contains \"glue:Get*\")) or (Action contains \"glue:*\") or (Action contains \"glue:GetDevEndpoints\" and Action contains \"glue:UpdateDevEndpoint\") or (Action contains \"glue:Get*\" and Action contains \"glue:Update*\")) and Resource == \"*\" and Condition == \"\"\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '370f0e5e-da1d-4a14-8ced-d1d7ab66a8d7'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 42",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '370f0e5e-da1d-4a14-8ced-d1d7ab66a8d7')]",
                                "contentId": "370f0e5e-da1d-4a14-8ced-d1d7ab66a8d7",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-ygadg6m2t4daa",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-ygadg6m2t4daa",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('8e01c41d-bd4c-4bbe-aed5-18592735052d')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "8e01c41d-bd4c-4bbe-aed5-18592735052d",
                "displayName": "Privilege escalation via Lambda policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "8e01c41d-bd4c-4bbe-aed5-18592735052d",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy on Lambda policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation via Lambda policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n  | where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and ((((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:*\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:CreateFunction\" and Action contains \"lambda:InvokeFunction\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:Create*\" and Action contains \"lambda:Invoke*\")) or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:*\" and Action contains \"dynamodb:*\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:CreateFunction\" and Action contains \"lambda:CreateEventSourceMapping\" and Action contains \"dynamodb:PutItem\" and Action contains \"dynamodb:CreateTable\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"lambda:Create*\" and Action contains \"dynamodb:Put*\" and Action contains \"dynamodb:Create*\")) and Resource == \"*\" and Condition == \"\"\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8e01c41d-bd4c-4bbe-aed5-18592735052d'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 43",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8e01c41d-bd4c-4bbe-aed5-18592735052d')]",
                                "contentId": "8e01c41d-bd4c-4bbe-aed5-18592735052d",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-pngyrs3ab5gnq",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-pngyrs3ab5gnq",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('c668c09f-5a49-43f9-b249-6b89a31ec8fb')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "c668c09f-5a49-43f9-b249-6b89a31ec8fb",
                "displayName": "Privilege escalation via SSM policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "c668c09f-5a49-43f9-b249-6b89a31ec8fb",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy on SSM Policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.",
                                "displayName": "Privilege escalation via SSM policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n  | where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and (Action contains \"ssm:*\" or Action contains \"ssm:Create*\" or Action contains \"ssm:CreateAssociation\") and Resource == \"*\" and isempty(Condition)\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1484"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c668c09f-5a49-43f9-b249-6b89a31ec8fb'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 44",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c668c09f-5a49-43f9-b249-6b89a31ec8fb')]",
                                "contentId": "c668c09f-5a49-43f9-b249-6b89a31ec8fb",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-zw4cywqqicyd2",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-zw4cywqqicyd2",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('8f1630c2-2e45-4df2-be43-50fba90f601d')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "8f1630c2-2e45-4df2-be43-50fba90f601d",
                "displayName": "RDS instance publicly exposed",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "8f1630c2-2e45-4df2-be43-50fba90f601d",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected publicly exposed RDS instance, which could lead to a leakage of sensitive data.",
                                "displayName": "RDS instance publicly exposed",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where  EventName == \"ModifyDBInstance\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| where tostring(parse_json(RequestParameters).publiclyAccessible) == \"true\"\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "techniques": [
                                    "T1537"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8f1630c2-2e45-4df2-be43-50fba90f601d'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 45",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8f1630c2-2e45-4df2-be43-50fba90f601d')]",
                                "contentId": "8f1630c2-2e45-4df2-be43-50fba90f601d",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-24puqpf4kv6fa",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-24puqpf4kv6fa",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('31b9e94b-0df6-4a3d-a297-3457b53c5d86')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "31b9e94b-0df6-4a3d-a297-3457b53c5d86",
                "displayName": "Successful brute force attack on S3 Bucket.",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "31b9e94b-0df6-4a3d-a297-3457b53c5d86",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "A successful brute force attack on an S3 bucket was detected. Verify these actions, and if needed, remediate the compromise.",
                                "displayName": "Successful brute force attack on S3 Bucket.",
                                "enabled": false,
                                "query": "let timeframe = 1h;\nlet failed_attempts = AWSCloudTrail\n| where TimeGenerated >= ago(timeframe)\n| where EventName == \"GetObject\" and isnotempty(ErrorMessage) and isnotempty(ErrorCode)\n| where UserIdentityAccountId == \"ANONYMOUS_PRINCIPAL\" or UserIdentityAccessKeyId <> RecipientAccountId\n| extend bucketName = tostring(parse_json(RequestParameters).bucketName), keyName = tostring(parse_json(RequestParameters).key)\n| summarize time_min_failed=arg_min(TimeGenerated, *), failed_keys = dcount(keyName) by UserIdentityAccountId, SourceIpAddress, bucketName\n| where failed_keys > 20;\nlet success_attempts = AWSCloudTrail\n| where TimeGenerated >= ago(timeframe)\n| where EventName == \"GetObject\" and isempty(ErrorMessage) and isempty(ErrorCode)\n| where UserIdentityAccountId == \"ANONYMOUS_PRINCIPAL\" or UserIdentityAccessKeyId <> RecipientAccountId\n| extend bucketName = tostring(parse_json(RequestParameters).bucketName), keyName = tostring(parse_json(RequestParameters).key)\n| summarize time_min_success=arg_min(TimeGenerated, *), success_keys = dcount(keyName) by UserIdentityAccountId, SourceIpAddress, bucketName\n| where success_keys >= 1;\nfailed_attempts\n| join kind=inner success_attempts on SourceIpAddress, UserIdentityAccountId, bucketName\n| where time_min_success > time_min_failed\n| project-away keyName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = time_min_success, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName, AssumedRoleArn = UserIdentityArn\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "techniques": [
                                    "T1562"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '31b9e94b-0df6-4a3d-a297-3457b53c5d86'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 46",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '31b9e94b-0df6-4a3d-a297-3457b53c5d86')]",
                                "contentId": "31b9e94b-0df6-4a3d-a297-3457b53c5d86",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-w34buxqhdmyau",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-w34buxqhdmyau",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('b7a44e0d-ae4c-4fb2-be1b-aa0e45f2327b')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "b7a44e0d-ae4c-4fb2-be1b-aa0e45f2327b",
                "displayName": "S3 bucket access point publicly exposed",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "b7a44e0d-ae4c-4fb2-be1b-aa0e45f2327b",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected S3 bucket publicly exposed via access point, which could lead to sensitive information leakage to the public. Verify the S3 object configurations.",
                                "displayName": "S3 bucket access point publicly exposed",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName == \"PutAccessPointPolicy\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).PutAccessPointPolicyRequest.Policy))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition), Principal_aws = tostring(parse_json(Statement).Principal.AWS), Principal = tostring(parse_json(Statement).Principal)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and (Principal_aws == \"*\" or Principal == \"*\") and isempty(Condition)\n| distinct TimeGenerated, EventName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "techniques": [
                                    "T1537"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b7a44e0d-ae4c-4fb2-be1b-aa0e45f2327b'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 47",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b7a44e0d-ae4c-4fb2-be1b-aa0e45f2327b')]",
                                "contentId": "b7a44e0d-ae4c-4fb2-be1b-aa0e45f2327b",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-ula4rb2gamnb6",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-ula4rb2gamnb6",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('6b9b4ee6-f4c1-4b86-8c8c-beb0bb59ae44')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "6b9b4ee6-f4c1-4b86-8c8c-beb0bb59ae44",
                "displayName": "S3 bucket exposed via ACL",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "6b9b4ee6-f4c1-4b86-8c8c-beb0bb59ae44",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected S3 bucket publicly exposed via ACL, which could lead for sensitive information leakage to the public. Verify the S3 object configurations.",
                                "displayName": "S3 bucket exposed via ACL",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName == \"PutBucketAcl\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend Grant = parse_json(tostring((parse_json(RequestParameters).AccessControlPolicy))).AccessControlList.Grant\n| mvexpand Grant\n| extend cannedacl = parse_json(tostring((parse_json(RequestParameters))))\n| extend URI = parse_json(Grant).Grantee.URI, type = parse_json(Grant).Grantee.[\"xsi:type\"], xamzacl = parse_json(cannedacl).[\"x-amz-acl\"]\n| where (type == \"Group\" and (URI endswith \"AllUsers\" or URI endswith \"AuthenticatedUsers\"))\n  or xamzacl in (\"authenticated-read\",\"public-read\",\"public-read-write\")\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "techniques": [
                                    "T1537"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6b9b4ee6-f4c1-4b86-8c8c-beb0bb59ae44'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 48",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6b9b4ee6-f4c1-4b86-8c8c-beb0bb59ae44')]",
                                "contentId": "6b9b4ee6-f4c1-4b86-8c8c-beb0bb59ae44",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-2o4blfahtw3b4",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-2o4blfahtw3b4",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('44a5b65e-b0a9-4591-aabc-388fd92a28c4')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "44a5b65e-b0a9-4591-aabc-388fd92a28c4",
                "displayName": "S3 bucket exposed via policy",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "44a5b65e-b0a9-4591-aabc-388fd92a28c4",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected S3 bucket publicly exposed via policy, this could lead for sensitive information leakage to the public. Verify the S3 object configurations.",
                                "displayName": "S3 bucket exposed via policy",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName == \"PutBucketPolicy\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend Statement = parse_json(tostring((parse_json(RequestParameters).bucketPolicy))).Statement\n| mvexpand Statement\n| extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition), Principal_aws = tostring(parse_json(Statement).Principal.AWS), Principal = tostring(parse_json(Statement).Principal)\n| extend Action = tostring(Action)\n| where Effect =~ \"Allow\" and (Principal_aws == \"*\" or Principal == \"*\") and isempty(Condition)\n| distinct TimeGenerated, EventName, SourceIpAddress, UserIdentityArn, UserIdentityUserName\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "techniques": [
                                    "T1537"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '44a5b65e-b0a9-4591-aabc-388fd92a28c4'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 49",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '44a5b65e-b0a9-4591-aabc-388fd92a28c4')]",
                                "contentId": "44a5b65e-b0a9-4591-aabc-388fd92a28c4",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-jtotm4rt7ylbk",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-jtotm4rt7ylbk",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('09f2a28b-3286-4268-9e2f-33805f104e5d')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "09f2a28b-3286-4268-9e2f-33805f104e5d",
                "displayName": "S3 object publicly exposed",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "09f2a28b-3286-4268-9e2f-33805f104e5d",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected S3 bucket that's publicly exposed, which could lead to sensitive information leakage to the public. Verify the S3 object configurations.",
                                "displayName": "S3 object publicly exposed",
                                "enabled": false,
                                "query": "AWSCloudTrail\n  | where EventName == \"PutObjectAcl\" and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend Grant = parse_json(tostring((parse_json(RequestParameters).AccessControlPolicy))).AccessControlList.Grant\n  | mvexpand Grant\n  | extend cannedacl = parse_json(tostring((parse_json(RequestParameters))))\n  | extend URI = parse_json(Grant).Grantee.URI, type = parse_json(Grant).Grantee.[\"xsi:type\"], xamzacl = parse_json(cannedacl).[\"x-amz-acl\"]\n  | where (type == \"Group\" and (URI endswith \"AllUsers\" or URI endswith \"AuthenticatedUsers\"))\n    or xamzacl in (\"authenticated-read\",\"public-read\",\"public-read-write\")\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "techniques": [
                                    "T1537"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '09f2a28b-3286-4268-9e2f-33805f104e5d'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 50",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '09f2a28b-3286-4268-9e2f-33805f104e5d')]",
                                "contentId": "09f2a28b-3286-4268-9e2f-33805f104e5d",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-566qw6d6wtwii",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-566qw6d6wtwii",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('b442b9e2-5cc4-4129-a85b-a5ef38a9e5f0')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "b442b9e2-5cc4-4129-a85b-a5ef38a9e5f0",
                "displayName": "S3 bucket suspicious ransomware activity",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "b442b9e2-5cc4-4129-a85b-a5ef38a9e5f0",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Suspicious S3 bucket activity indicating ransomware was detected.\nAn attacker might download all the objects in a compromised S3 bucket, encrypt them with his own key, then upload them back to the same bucket, overwriting the existing ones.",
                                "displayName": "S3 bucket suspicious ransomware activity",
                                "enabled": false,
                                "query": "let timeframe = 1h;\nlet lookback = 2h;\n// The attacker downloads the object(s) from the compromised bucket\nlet GetObject = AWSCloudTrail\n| where TimeGenerated >= ago(lookback)\n| where EventName == \"GetObject\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend bucketName = tostring(parse_json(RequestParameters).bucketName), keyName = tostring(parse_json(RequestParameters).key)\n| project-rename StartTime = TimeGenerated;\n// Then, the attacker overwrites the same object(s) but encrypted with his own key\nlet PutObject = AWSCloudTrail\n| where TimeGenerated >= ago(timeframe)\n| where EventName == \"PutObject\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend bucketName = tostring(parse_json(RequestParameters).bucketName), keyName = tostring(parse_json(RequestParameters).key)\n| extend kmsId = tostring(parse_json(RequestParameters).[\"x-amz-server-side-encryption-aws-kms-key-id\"])\n| where tostring(kmsId) !has tostring(RecipientAccountId) and kmsId <> \"\";\nPutObject\n| join kind=inner \n(\n   GetObject\n)\non $left.bucketName == $right.bucketName, $left.keyName == $right.keyName\n| where TimeGenerated > StartTime\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = StartTime, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Impact"
                                ],
                                "techniques": [
                                    "T1486"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b442b9e2-5cc4-4129-a85b-a5ef38a9e5f0'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 51",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b442b9e2-5cc4-4129-a85b-a5ef38a9e5f0')]",
                                "contentId": "b442b9e2-5cc4-4129-a85b-a5ef38a9e5f0",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-3nzwwnpralmrc",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-3nzwwnpralmrc",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('bce1dcba-4948-414d-8838-6385afb9d496')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "bce1dcba-4948-414d-8838-6385afb9d496",
                "displayName": "SAML update identity provider",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "bce1dcba-4948-414d-8838-6385afb9d496",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Attackers could update the SAML provider in order to create unauthorized but valid tokens and represent them to services that trust SAML tokens from the environment. These tokens can then be used to access resources. More about this API at https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSAMLProvider.html ",
                                "displayName": "SAML update identity provider",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName == \"UpdateSAMLProvider\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'bce1dcba-4948-414d-8838-6385afb9d496'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 52",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'bce1dcba-4948-414d-8838-6385afb9d496')]",
                                "contentId": "bce1dcba-4948-414d-8838-6385afb9d496",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-4iaugzqi2zrds",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-4iaugzqi2zrds",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('874a1762-3fd7-4489-b411-6d4a9e9e8a59')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "874a1762-3fd7-4489-b411-6d4a9e9e8a59",
                "displayName": "Policy version set to default",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "874a1762-3fd7-4489-b411-6d4a9e9e8a59",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "An attacker with SetDefaultPolicyVersion permissions could escalate privileges through existing policy versions that are not currently in use. More about this API at https://docs.aws.amazon.com/IAM/latest/APIReference/API_SetDefaultPolicyVersion.html ",
                                "displayName": "Policy version set to default",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where EventName == \"SetDefaultPolicyVersion\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '874a1762-3fd7-4489-b411-6d4a9e9e8a59'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 53",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '874a1762-3fd7-4489-b411-6d4a9e9e8a59')]",
                                "contentId": "874a1762-3fd7-4489-b411-6d4a9e9e8a59",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-22hfkzsvktink",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-22hfkzsvktink",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring('75647b58-bcc8-4eb5-9658-46698d3fa153')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "75647b58-bcc8-4eb5-9658-46698d3fa153",
                "displayName": "SSM document is publicly exposed",
                "contentKind": "AnalyticsRule",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "75647b58-bcc8-4eb5-9658-46698d3fa153",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detected a SSM document that is publicly exposed, which could lead to sensitive information leakage to the public. Verify the object configurations.",
                                "displayName": "SSM document is publicly exposed",
                                "enabled": false,
                                "query": "AWSCloudTrail\n| where  EventName == \"ModifyDocumentPermission\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| where todynamic(parse_json(RequestParameters).[\"accountIdsToAdd\"]) == '[\"all\"]'\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent,UserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, RequestParameters, ResponseElements, UserIdentityArn\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "dataTypes": [
                                            "AWSCloudTrail"
                                        ],
                                        "connectorId": "AWS"
                                    }
                                ],
                                "tactics": [
                                    "Discovery"
                                ],
                                "techniques": [
                                    "T1526"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "AccountCustomEntity"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPCustomEntity"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '75647b58-bcc8-4eb5-9658-46698d3fa153'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Analytics Rule 54",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '75647b58-bcc8-4eb5-9658-46698d3fa153')]",
                                "contentId": "75647b58-bcc8-4eb5-9658-46698d3fa153",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-7m5dmypsyeklk",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-ar-7m5dmypsyeklk",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('e0a67cd7-b4e5-4468-aae0-26cb16a1bbd2')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "e0a67cd7-b4e5-4468-aae0-26cb16a1bbd2",
                "displayName": "Changes made to AWS IAM policy",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_1",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Changes made to AWS IAM policy",
                                "category": "Hunting Queries",
                                "query": "\nAWSCloudTrail\n| where  EventName in~ (\"AttachGroupPolicy\", \"AttachRolePolicy\", \"AttachUserPolicy\", \"CreatePolicy\",\n\"DeleteGroupPolicy\", \"DeletePolicy\", \"DeleteRolePolicy\", \"DeleteUserPolicy\", \"DetachGroupPolicy\",\n\"PutUserPolicy\", \"PutGroupPolicy\", \"CreatePolicyVersion\", \"DeletePolicyVersion\", \"DetachRolePolicy\", \"CreatePolicy\")\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \nUserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, ResponseElements\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityAccountId\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "This query looks for when an API call is made to change an IAM, particularly those related to new policies being \nattached to users and roles, as well as changes to access methods and changes to account level policies."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "PrivilegeEscalation,DefenseEvasion"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1078,T1484"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'e0a67cd7-b4e5-4468-aae0-26cb16a1bbd2'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 1",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'e0a67cd7-b4e5-4468-aae0-26cb16a1bbd2')]",
                                "contentId": "e0a67cd7-b4e5-4468-aae0-26cb16a1bbd2",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-trlfjwjxflery",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-trlfjwjxflery",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('e1a91db8-f2b3-4531-bff6-da133d4f4f1a')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "e1a91db8-f2b3-4531-bff6-da133d4f4f1a",
                "displayName": "IAM Privilege Escalation by Instance Profile attachment",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_2",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "IAM Privilege Escalation by Instance Profile attachment",
                                "category": "Hunting Queries",
                                "query": "\n// Creating separate table for RemoveRoleToInstanceProfile\nlet RemoveRole=AWSCloudTrail\n| where  EventName in~ (\"RemoveRoleFromInstanceProfile\") and isempty(ErrorMessage)\n| extend RoleRemoved = tostring(parse_json(RequestParameters).roleName), InstanceProfileName = tostring(parse_json(RequestParameters).instanceProfileName), TimeRemoved=TimeGenerated\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| summarize RoleRemovedCount= dcount(TimeRemoved) by TimeRemoved, EventName, EventTypeName, UserIdentityArn, UserIdentityUserName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \nSourceIpAddress, AWSRegion, EventSource, RoleRemoved, InstanceProfileName;\n// Creating separate table for AddRoleToInstanceProfile\nlet AddRole=AWSCloudTrail\n| where  EventName in~ (\"AddRoleToInstanceProfile\") and isempty(ErrorMessage)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend RoleAdded = tostring(parse_json(RequestParameters).roleName), InstanceProfileName = tostring(parse_json(RequestParameters).instanceProfileName), TimeAdded=TimeGenerated\n| summarize RoleAddedCount= dcount(TimeAdded) by TimeAdded, EventName, EventTypeName, UserIdentityArn, UserIdentityUserName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \nSourceIpAddress, AWSRegion, EventSource, RoleAdded, InstanceProfileName;\n//Joining both operations from the same source IP, user and instance profile name\nRemoveRole\n| join kind= inner (\n   AddRole \n) on AWSRegion,SourceIpAddress, InstanceProfileName, UserIdentityUserName\n| where TimeAdded  > TimeRemoved // Checking if RoleAdd operation was performed after removal\n| summarize TotalCount=count() by TimeAdded, TimeRemoved, RoleAdded, RoleRemoved, UserIdentityUserName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent,\nSourceIpAddress, AWSRegion, EventSource, RoleRemovedCount, RoleAddedCount\n| extend timestamp = iff(TimeAdded > TimeRemoved,TimeAdded, TimeRemoved), IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "An instance profile is a container for an IAM role that you can use to pass role information to an EC2 instance when the instance start.\nIdentifies when existing role is removed and new/existing high privileged role is added to instance profile. \nAny instance with this instance profile attached is able to perform privileged operations.\nAWS Instance Profile: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2_instance-profiles.html\nand CloudGoat - IAM PrivilegeEscalation by Attachment: https://github.com/RhinoSecurityLabs/cloudgoat/tree/master/scenarios/iam_privesc_by_attachment"
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "PrivilegeEscalation"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1098"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'e1a91db8-f2b3-4531-bff6-da133d4f4f1a'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 2",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'e1a91db8-f2b3-4531-bff6-da133d4f4f1a')]",
                                "contentId": "e1a91db8-f2b3-4531-bff6-da133d4f4f1a",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-l737onrgcdieu",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-l737onrgcdieu",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('0db42a94-e7c8-4bf1-99a7-1a2fb4158212')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "0db42a94-e7c8-4bf1-99a7-1a2fb4158212",
                "displayName": "Privileged role attached to Instance",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_3",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Privileged role attached to Instance",
                                "category": "Hunting Queries",
                                "query": "\nlet EventNameList = dynamic([\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\"]);\nlet PolicyArnList = dynamic([\"arn:aws:iam::aws:policy/AdministratorAccess\",\"arn:aws:iam::aws:policy/DatabaseAdministrator\",\"arn:aws:iam::aws:policy/NetworkAdministrator\",\"arn:aws:iam::aws:policy/SystemAdministrator\",\"arn:aws:iam::aws:policy/AmazonS3FullAccess\"]);\nlet starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\n//Creating a temp table of events creating privileged role or users which can later be correlated with suspicious operations.\nlet PrivilegedRoleorUsers = AWSCloudTrail\n| where TimeGenerated >= lookback \n| where EventName in (EventNameList)\n| extend PolicyArn = tostring(parse_json(RequestParameters).policyArn), RoleName = tostring(parse_json(RequestParameters).roleName)\n| where PolicyArn in (PolicyArnList)\n| distinct PolicyArn, UserIdentityType, UserIdentityUserName,RoleName;\n// Joining the list of identities having Privileged roles with the API call AddRoleToInstanceProfile to indentify the instances which may be used by adversaries as pivot point for privilege escalation.\nPrivilegedRoleorUsers\n| join (\nAWSCloudTrail\n| where TimeGenerated between (starttime..endtime)\n| where EventName in (\"AddRoleToInstanceProfile\") \n| extend InstanceProfileName = tostring(parse_json(RequestParameters).InstanceProfileName), RoleName = tostring(parse_json(RequestParameters).roleName)\n| summarize EventCount=count(), StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by EventSource, EventName, UserIdentityType , UserIdentityArn , UserIdentityUserName, SourceIpAddress, RoleName\n) on RoleName \n| extend timestamp = StartTimeUtc, IPCustomEntity = SourceIpAddress, AccountCustomEntity = RoleName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Identity and Access Management (IAM) securely manages access to AWS services and resources. \nIdentifies when a Privileged role is attached to an existing instance or new instance at deployment. This instance may be used by an adversary to escalate a normal user privileges to an adminsitrative level.\nand AWS API AddRoleToInstanceProfile at https://docs.aws.amazon.com/IAM/latest/APIReference/API_AddRoleToInstanceProfile.html"
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "PrivilegeEscalation"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1098"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '0db42a94-e7c8-4bf1-99a7-1a2fb4158212'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 3",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '0db42a94-e7c8-4bf1-99a7-1a2fb4158212')]",
                                "contentId": "0db42a94-e7c8-4bf1-99a7-1a2fb4158212",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-ei6aykab72ihk",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-ei6aykab72ihk",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('5b6ee21d-da53-46eb-827c-eab2a9ba3d2f')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "5b6ee21d-da53-46eb-827c-eab2a9ba3d2f",
                "displayName": "Suspicious credential token access of valid IAM Roles",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_4",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Suspicious credential token access of valid IAM Roles",
                                "category": "Hunting Queries",
                                "query": "\nlet starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\n// Generating historical table of AssumeRole operations for IAM Roles to be compared with last 24 hour\nAWSCloudTrail\n| where TimeGenerated between (starttime..endtime)\n| where EventName == \"AssumeRole\" | extend RoleArn = tostring(parse_json(RequestParameters).roleArn)\n| project TimeGenerated, EventSource, EventName, UserIdentityType, UserIdentityInvokedBy , SourceIpAddress, RoleArn\n// Doing Leftanti join to find new AssumeRole operation for IAM role which was not seen historically generated from previous table.\n| join kind= leftanti\n(\n  AWSCloudTrail\n  | where TimeGenerated  between (lookback..starttime)\n  | where EventName == \"AssumeRole\" | extend RoleArn = tostring(parse_json(RequestParameters).roleArn)\n  | project TimeGenerated, EventSource, EventName, UserIdentityType, UserIdentityInvokedBy , SourceIpAddress, RoleArn\n) on RoleArn, UserIdentityInvokedBy\n| summarize EventCount = count(), StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by RoleArn, EventSource, EventName, UserIdentityType, UserIdentityInvokedBy, SourceIpAddress\n| extend timestamp = StartTimeUtc, IPCustomEntity = SourceIpAddress, AccountCustomEntity = tostring(split(RoleArn, \"/\")[1])\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Adversaries may generate temporary credentials of existing privileged IAM roles to access AWS resources that were not previously accessible to perform malicious actions. The credentials may be generated by trusted IAM user or via AWS Cloud Instance Metadata API.\nThis query will look for AWS STS API Assume Role operations for RoleArn (Role Amazon Resource Names) which was not historically seen.\nYou can also limit the query to only sensitive IAM Roles which needs to be monitored.\nRead more about ingest custom logs using Logstash at https://github.com/Azure/Azure-Sentinel/wiki/Ingest-Custom-Logs-LogStash \nAWS API AssumeRole at https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html and AWS Instance Metadata API at https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html "
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "InitialAccess,DefenseEvasion"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1078"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '5b6ee21d-da53-46eb-827c-eab2a9ba3d2f'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 4",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '5b6ee21d-da53-46eb-827c-eab2a9ba3d2f')]",
                                "contentId": "5b6ee21d-da53-46eb-827c-eab2a9ba3d2f",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-r5ehaw43ezrms",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-r5ehaw43ezrms",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('e0d57543-acbd-428b-bb96-24a67506f84d')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "e0d57543-acbd-428b-bb96-24a67506f84d",
                "displayName": "Unused or Unsupported Cloud Regions",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_5",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Unused or Unsupported Cloud Regions",
                                "category": "Hunting Queries",
                                "query": "\nlet starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\n// Generating historical table of all events per AccountId and Region\nlet EventInfo_CurrentDay =  materialize (AWSCloudTrail | where TimeGenerated between(starttime..endtime));\nlet EventInfo_historical = AWSCloudTrail  | where TimeGenerated  between (lookback..starttime) | summarize max(TimeGenerated) by AWSRegion, UserIdentityAccountId;\n// Doing Leftanti join to find new regions historically not seen for the same account.\nlet EventInfo_Unseen = materialize (\nEventInfo_CurrentDay\n| summarize max(TimeGenerated) by AWSRegion, UserIdentityAccountId\n| join kind= leftanti\n(\n  EventInfo_historical\n) on AWSRegion, UserIdentityAccountId\n);\nEventInfo_Unseen\n// Join Ununsed region seen with current data to gather context about API events seen\n| join kind= inner (\n   EventInfo_CurrentDay\n) on AWSRegion, UserIdentityAccountId\n| extend UnusedRegion = AWSRegion\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| summarize EventCount = count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), EventNameList=make_set(EventName), IPList=make_set(SourceIpAddress) by UserIdentityAccountId, UnusedRegion, UserIdentityUserName\n| extend timestamp = StartTime , AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Adversaries may create cloud instances in unused geographic service regions in order to evade detection.\nAccess is usually obtained through compromising accounts used to manage cloud infrastructure.\nRefer: https://attack.mitre.org/techniques/T1535/"
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "DefenseEvasion"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1535"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'e0d57543-acbd-428b-bb96-24a67506f84d'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 5",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'e0d57543-acbd-428b-bb96-24a67506f84d')]",
                                "contentId": "e0d57543-acbd-428b-bb96-24a67506f84d",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-2b7b3w2zzdhw2",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-2b7b3w2zzdhw2",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('81a8880f-cc20-40ce-98d6-2fc6a1c5b9a4')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "81a8880f-cc20-40ce-98d6-2fc6a1c5b9a4",
                "displayName": "Suspicious EC2 launched without a key pair",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_6",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Suspicious EC2 launched without a key pair",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where EventName == \"RunInstances\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend items = tostring(parse_json(RequestParameters).instancesSet.items)\n| mv-expand todynamic(items)\n| extend keyName=tostring(todynamic(items.['keyName']))\n| where isempty(keyName) and RequestParameters contains \"userData\" and SourceIpAddress !contains \"amazonaws.com\"\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "An attacker with limited permissions, or a sophisticated attacker disguising his activity, may have launched an EC2 instance without a key pair, allowing him to execute code on the machine using the UserData attribute (for example, by executing a reverse shell)."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Execution"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1204"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '81a8880f-cc20-40ce-98d6-2fc6a1c5b9a4'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 6",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '81a8880f-cc20-40ce-98d6-2fc6a1c5b9a4')]",
                                "contentId": "81a8880f-cc20-40ce-98d6-2fc6a1c5b9a4",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-3jurkps2ii7oc",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-3jurkps2ii7oc",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('2b8cecfe-f705-432d-9f38-08207b9473e1')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "2b8cecfe-f705-432d-9f38-08207b9473e1",
                "displayName": "IAM assume role policy brute force",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_7",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "IAM assume role policy brute force",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where EventName == \"AssumeRole\" and ErrorMessage == \"AccessDenied\"\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n| summarize timestamp=arg_max(timestamp,*), failed_roles=dcount(ErrorMessage) by IPCustomEntity, AccountCustomEntity\n| where failed_roles > 2\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Several failed \"assume role\" attempts occurred on existing roles in the account. This could be an attacker trying to escalate privileges and move laterally by assuming roles in a compromised account. Verify with the user identity that the activity is legitimate."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "CredentialAccess"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1110"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '2b8cecfe-f705-432d-9f38-08207b9473e1'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 7",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '2b8cecfe-f705-432d-9f38-08207b9473e1')]",
                                "contentId": "2b8cecfe-f705-432d-9f38-08207b9473e1",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-ichokfrl2lg7i",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-ichokfrl2lg7i",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('48c49b1d-2aa0-442b-96e3-cae6ad1251cd')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "48c49b1d-2aa0-442b-96e3-cae6ad1251cd",
                "displayName": "Bucket versioning suspended",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_8",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Bucket versioning suspended",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where EventName == \"PutBucketVersioning\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend status = tostring(parse_json(RequestParameters).VersioningConfiguration.Status)\n| where status == \"Suspended\"\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Detected Bucket versioning suspended event. Attackers could use this technique to be able to ransom buckets without the option for the victim to have a backup."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Impact"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1485"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '48c49b1d-2aa0-442b-96e3-cae6ad1251cd'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 8",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '48c49b1d-2aa0-442b-96e3-cae6ad1251cd')]",
                                "contentId": "48c49b1d-2aa0-442b-96e3-cae6ad1251cd",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-mrzxhjso3tdyw",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-mrzxhjso3tdyw",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('a2772445-9bb1-4176-9481-b262cb59118a')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "a2772445-9bb1-4176-9481-b262cb59118a",
                "displayName": "New access key created to user",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_9",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "New access key created to user",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where  EventName == \"CreateAccessKey\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \nUserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData,UserIdentityArn, ResponseElements, RequestParameters\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "An attacker with the CreateAccessKey permissions on other users can create an access Key ID and secret access key belonging to another user in the AWS environment for privilege escalation."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Persistence"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1098"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'a2772445-9bb1-4176-9481-b262cb59118a'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 9",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'a2772445-9bb1-4176-9481-b262cb59118a')]",
                                "contentId": "a2772445-9bb1-4176-9481-b262cb59118a",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-dowbr4xweozna",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-dowbr4xweozna",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('4e3c81bf-61a4-47f4-b20d-a5a414ea08aa')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "4e3c81bf-61a4-47f4-b20d-a5a414ea08aa",
                "displayName": "CreateLoginProfile detected",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_10",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "CreateLoginProfile detected",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n  | where  EventName == \"CreateLoginProfile\" and isempty(ErrorCode) and isempty(ErrorMessage)\n  | project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, UserIdentityArn, \n  UserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, ResponseElements, RequestParameters\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "An attacker could use CreateLoginProfile permissions on other users for privilege escalation by creating a password to a victim user without a login profile to use to login to the AWS Console."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Persistence"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1098"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '4e3c81bf-61a4-47f4-b20d-a5a414ea08aa'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 10",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '4e3c81bf-61a4-47f4-b20d-a5a414ea08aa')]",
                                "contentId": "4e3c81bf-61a4-47f4-b20d-a5a414ea08aa",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-3iz6uzidlus7w",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-3iz6uzidlus7w",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('b5b172b1-d976-4113-af1f-02f7bf7d2092')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "b5b172b1-d976-4113-af1f-02f7bf7d2092",
                "displayName": "ECR image scan findings low",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_11",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "ECR image scan findings low",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where EventName == \"DescribeImageScanFindings\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend repoName = tostring(parse_json(ResponseElements).repositoryName)\n| extend imageId = tostring(parse_json(ResponseElements).imageId.imageDigest)\n| extend Low = toint(parse_json(ResponseElements).imageScanFindings.findingSeverityCounts.LOW)\n| where Low > 0\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "AWS ECR Image scan detected low severity vulnerabilities in your container image."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Execution"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1204"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'b5b172b1-d976-4113-af1f-02f7bf7d2092'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 11",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'b5b172b1-d976-4113-af1f-02f7bf7d2092')]",
                                "contentId": "b5b172b1-d976-4113-af1f-02f7bf7d2092",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-f7yzq2fewstqc",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-f7yzq2fewstqc",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('4fbbae0a-ce5b-4b2a-b5e6-700920561680')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "4fbbae0a-ce5b-4b2a-b5e6-700920561680",
                "displayName": "ECR image scan findings medium",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_12",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "ECR image scan findings medium",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where EventName == \"DescribeImageScanFindings\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend repoName = tostring(parse_json(ResponseElements).repositoryName)\n| extend imageId = tostring(parse_json(ResponseElements).imageId.imageDigest)\n| extend Medium = toint(parse_json(ResponseElements).imageScanFindings.findingSeverityCounts.MEDIUM)\n| where Medium > 0\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName \n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "AWS ECR image scan detected medium severity vulnerabilities in your container image."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Execution"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1204"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '4fbbae0a-ce5b-4b2a-b5e6-700920561680'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 12",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '4fbbae0a-ce5b-4b2a-b5e6-700920561680')]",
                                "contentId": "4fbbae0a-ce5b-4b2a-b5e6-700920561680",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-6jok533arrs7m",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-6jok533arrs7m",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('c9ccaebf-314c-446d-b3f6-314560ccb0e1')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "c9ccaebf-314c-446d-b3f6-314560ccb0e1",
                "displayName": "Excessive execution of discovery events",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_13",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Excessive execution of discovery events",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where (EventName startswith \"List\" or EventName startswith \"Describe\" or EventName startswith \"Get\")\n| where SourceIpAddress !has \"amazonaws.com\" and UserAgent has \"aws-cli\"\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n| summarize timestamp=arg_max(timestamp,*), enum_events=dcount(EventName), num_regions=dcount(AWSRegion) by bin(TimeGenerated,24h), IPCustomEntity, AccountCustomEntity\n| where enum_events > 3\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Several enumeration API calls were executed by the same identity. This could be an attacker trying to enumerate the compromised user/token permissions. Verify with the user identity that this activity is legitimate."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Discovery"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1526"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'c9ccaebf-314c-446d-b3f6-314560ccb0e1'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 13",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'c9ccaebf-314c-446d-b3f6-314560ccb0e1')]",
                                "contentId": "c9ccaebf-314c-446d-b3f6-314560ccb0e1",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-vulxrcxzda554",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-vulxrcxzda554",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('13afb771-5d55-4d69-a745-83d2fc69a923')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "13afb771-5d55-4d69-a745-83d2fc69a923",
                "displayName": "Failed brute force on S3 bucket",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_14",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Failed brute force on S3 bucket",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where EventName == \"GetObject\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| where UserIdentityAccountId == \"ANONYMOUS_PRINCIPAL\" or UserIdentityAccessKeyId <> RecipientAccountId\n| extend bucketName = tostring(parse_json(RequestParameters).bucketName), keyName = tostring(parse_json(RequestParameters).key)\n| summarize arg_max(TimeGenerated, *), failed_attempts = dcount(keyName) by UserIdentityAccountId, SourceIpAddress, bucketName\n| where failed_attempts > 20\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName, bucketName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Detected failed brute attempt on S3 bucket. If it is not an anonymous principle, verify with the user."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Discovery"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1619"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '13afb771-5d55-4d69-a745-83d2fc69a923'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 14",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '13afb771-5d55-4d69-a745-83d2fc69a923')]",
                                "contentId": "13afb771-5d55-4d69-a745-83d2fc69a923",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-krc24ztdgmsmw",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-krc24ztdgmsmw",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('bf130d1d-702b-4af6-9528-8bc4229e59f4')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "bf130d1d-702b-4af6-9528-8bc4229e59f4",
                "displayName": "Multiple failed login attempts to an existing user without MFA",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_15",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Multiple failed login attempts to an existing user without MFA",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where EventName == \"ConsoleLogin\"\n| where tostring(parse_json(ResponseElements).ConsoleLogin) == \"Failure\" and tostring(parse_json(AdditionalEventData).MFAUsed) == \"No\"\n| summarize arg_min(TimeGenerated, *), failed_attempts=count() by UserIdentityUserName, SourceIpAddress\n| where failed_attempts > 4\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Failed brute force attempt detected on an existing user without MFA configurations."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "CredentialAccess"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1110"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'bf130d1d-702b-4af6-9528-8bc4229e59f4'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 15",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'bf130d1d-702b-4af6-9528-8bc4229e59f4')]",
                                "contentId": "bf130d1d-702b-4af6-9528-8bc4229e59f4",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-3sjyp5imbazsq",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-3sjyp5imbazsq",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('7e258a45-b356-44f6-9a62-2643cef7b869')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "7e258a45-b356-44f6-9a62-2643cef7b869",
                "displayName": "IAM AccessDenied discovery events",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_16",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "IAM AccessDenied discovery events",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where ErrorMessage in (\"Access Denied\",\"AccessDenied\") and UserIdentityType == 'IAMUser' and UserAgent !endswith \".amazonaws.com\"\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| summarize failures = count(), Source_IP_Addresses=make_set(SourceIpAddress) by bin(TimeGenerated, 1h), UserIdentityUserName, UserIdentityArn\n| where failures >= 5\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "The following detection identifies excessive AccessDenied events within an hour timeframe. It is possible that an access key to AWS may have been stolen and is being misused to perform discovery events."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Discovery"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1087"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '7e258a45-b356-44f6-9a62-2643cef7b869'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 16",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '7e258a45-b356-44f6-9a62-2643cef7b869')]",
                                "contentId": "7e258a45-b356-44f6-9a62-2643cef7b869",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-mpecc7utabk42",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-mpecc7utabk42",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('d022a62c-643b-4e8a-b583-0230e32a96e4')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "d022a62c-643b-4e8a-b583-0230e32a96e4",
                "displayName": "Changes made to AWS IAM objects",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_17",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Changes made to AWS IAM objects",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n | where  EventName in~ (\"DeleteUser\", \"DeleteGroup\", \"CreateUser\") and isempty(ErrorMessage) and isempty(ErrorCode)\n | project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \n   UserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, ResponseElements\n | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityAccountId\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Identity and Access Management (IAM) securely manages access to AWS services and resources.\nThis query looks for when an API call is made to change an IAM, particularly those related to new objects being created or deleted. If these turn out to be noisy, filter out the most common for your environment."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "PrivilegeEscalation,DefenseEvasion"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1078,T1484"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'd022a62c-643b-4e8a-b583-0230e32a96e4'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 17",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'd022a62c-643b-4e8a-b583-0230e32a96e4')]",
                                "contentId": "d022a62c-643b-4e8a-b583-0230e32a96e4",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-bwxfcdde7vudc",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-bwxfcdde7vudc",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('d82ea1db-f600-4c9e-8ba8-d271e9c12eb8')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "d82ea1db-f600-4c9e-8ba8-d271e9c12eb8",
                "displayName": "Lambda function throttled",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_18",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Lambda function throttled",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where  EventName startswith \"PutFunctionConcurrency\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| where tostring(parse_json(RequestParameters).reservedConcurrentExecutions) == \"0\"\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \nUserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData,UserIdentityArn, ResponseElements, FunctionName = tostring(parse_json(RequestParameters).functionName)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = FunctionName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Detected Lambda function throttled. Attacker could use this technique to result in Denial of Service. More about this API at https://docs.aws.amazon.com/lambda/latest/dg/API_PutFunctionConcurrency.html "
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Impact"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1498"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'd82ea1db-f600-4c9e-8ba8-d271e9c12eb8'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 18",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'd82ea1db-f600-4c9e-8ba8-d271e9c12eb8')]",
                                "contentId": "d82ea1db-f600-4c9e-8ba8-d271e9c12eb8",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-bbs66fsc4pvam",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-bbs66fsc4pvam",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('77d0aadc-aaea-4346-b61a-bf7ac6b71bba')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "77d0aadc-aaea-4346-b61a-bf7ac6b71bba",
                "displayName": "Lambda layer imported from external account",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_19",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Lambda layer imported from external account",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where (EventName startswith \"UpdateFunctionConfiguration\" or EventName startswith \"CreateFunction\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend layers = parse_json(tostring((parse_json(RequestParameters)))).layers\n| extend accId = split(parse_json(tostring((parse_json(RequestParameters)))).layers,\":\",4)\n| mv-expand accId\n| where layers <> \"\" and layers !has RecipientAccountId\n// Exclude AWS Owned AccIds (built-in layers)\n| where accId !in (\"249908578461\",\"668099181075\",\"468957933125\",\"399891621064\",\"325793726646\",\"118857876118\",\"296580773974\",\"961244031340\",\"631267018583\",\"817496625479\",\"778625758767\",\"292169987271\",\"642425348156\",\"142628438157\",\"959311844005\",\"640010853179\",\"259788987135\",\"420165488524\",\"683298794825\",\"382066503313\",\"556739011827\",\"138526772879\",\"027255383542\",\"728743619870\",\"958113053741\",\"359756378197\",\"039592058896\",\"066940009817\",\"434848589818\",\"282860088358\",\"493207061005\",\"646970417810\",\"203683718741\",\"615057806174\",\"615084187847\",\"630222743974\",\"980059726660\",\"706869817123\",\"826293736237\",\"421114256042\",\"080788657173\",\"418787028745\",\"554480029851\",\"000010852771\",\"574348263942\",\"559955524753\",\"946561847325\",\"946746059096\",\"580247275435\",\"012438385374\",\"519774774795\",\"488211338238\",\"339249233099\",\"285320876703\")\n| distinct TimeGenerated, EventName, SourceIpAddress, UserIdentityArn, UserIdentityUserName, tostring(layers)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Detected an external account adding lambda layer, which attackers could use to inject a backdoor inside the lambda function. If this is the case, make sure to remove the layer from the function."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Persistence"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1525"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '77d0aadc-aaea-4346-b61a-bf7ac6b71bba'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 19",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '77d0aadc-aaea-4346-b61a-bf7ac6b71bba')]",
                                "contentId": "77d0aadc-aaea-4346-b61a-bf7ac6b71bba",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-egpbjttosulgo",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-egpbjttosulgo",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('2dd2143b-6667-4a7a-b04f-98d22caeffac')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "2dd2143b-6667-4a7a-b04f-98d22caeffac",
                "displayName": "Lambda UpdateFunctionCode",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_20",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Lambda UpdateFunctionCode",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where EventName startswith 'UpdateFunctionCode' and EventSource == \"lambda.amazonaws.com\" and UserIdentityType =='IAMUser' and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "This analytic is designed to detect an IAM user updating AWS lambda code via AWS CLI to gain persistent, further access into your AWS environment and to facilitate panting backdoors. An attacker may upload malicious code/binary to a lambda function which will be executed automatically when the function is triggered."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Execution"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1204"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '2dd2143b-6667-4a7a-b04f-98d22caeffac'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 20",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '2dd2143b-6667-4a7a-b04f-98d22caeffac')]",
                                "contentId": "2dd2143b-6667-4a7a-b04f-98d22caeffac",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-r62334qxa5l26",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-r62334qxa5l26",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('838f59d4-fe47-422b-819d-1be502940547')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "838f59d4-fe47-422b-819d-1be502940547",
                "displayName": "Login profile updated",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_21",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Login profile updated",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where  EventName == \"UpdateLoginProfile\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \nUserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource,UserIdentityArn, AdditionalEventData, ResponseElements, RequestParameters\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "An attacker could use UpdateLoginProfile permissions for privilege escalation by changing the victim user password. More about this API at https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateLoginProfile.html "
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Persistence"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1098"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '838f59d4-fe47-422b-819d-1be502940547'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 21",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '838f59d4-fe47-422b-819d-1be502940547')]",
                                "contentId": "838f59d4-fe47-422b-819d-1be502940547",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-g4p5rpdfqsgh2",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-g4p5rpdfqsgh2",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('3b7df29e-a798-4b6b-9ef7-73b9a3cf56a2')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "3b7df29e-a798-4b6b-9ef7-73b9a3cf56a2",
                "displayName": "Modification of route-table attributes",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_22",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Modification of route-table attributes",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where  EventName in (\"CreateRoute\",\"DeleteRoute\",\"ReplaceRoute\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \nUserIdentityUserName, SessionMfaAuthenticated,UserIdentityArn, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, ResponseElements\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "An attacker could modify route-table attributes in order to access resources he couldn't access before."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "DefenseEvasion"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1562"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '3b7df29e-a798-4b6b-9ef7-73b9a3cf56a2'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 22",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '3b7df29e-a798-4b6b-9ef7-73b9a3cf56a2')]",
                                "contentId": "3b7df29e-a798-4b6b-9ef7-73b9a3cf56a2",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-74eo2doia3fby",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-74eo2doia3fby",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('05167149-4670-4a9f-b34e-5a0a92243194')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "05167149-4670-4a9f-b34e-5a0a92243194",
                "displayName": "Modification of subnet attributes",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_23",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Modification of subnet attributes",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where  EventName == \"ModifySubnetAttribute\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \nUserIdentityUserName, UserIdentityArn, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, ResponseElements\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "An attacker could modify subnet attributes in order to access resources he couldn't access before."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "DefenseEvasion"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1562"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '05167149-4670-4a9f-b34e-5a0a92243194'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 23",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '05167149-4670-4a9f-b34e-5a0a92243194')]",
                                "contentId": "05167149-4670-4a9f-b34e-5a0a92243194",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-kar5ub3as6gzg",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-kar5ub3as6gzg",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('a3a19731-9e82-49b6-9142-2dd570feefd5')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "a3a19731-9e82-49b6-9142-2dd570feefd5",
                "displayName": "Modification of vpc attributes",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_24",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Modification of vpc attributes",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where  EventName == \"ModifyVpcAttribute\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \nUserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, UserIdentityArn, AdditionalEventData, ResponseElements\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "An attacker could modify vpc attributesin order to access resources he couldn't access before."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "DefenseEvasion"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1562"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'a3a19731-9e82-49b6-9142-2dd570feefd5'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 24",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'a3a19731-9e82-49b6-9142-2dd570feefd5')]",
                                "contentId": "a3a19731-9e82-49b6-9142-2dd570feefd5",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-qfc7tdizgdmsm",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-qfc7tdizgdmsm",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('49bae199-ea04-4a2e-95a6-e3a1f68ab259')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "49bae199-ea04-4a2e-95a6-e3a1f68ab259",
                "displayName": "Network ACL deleted",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_25",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Network ACL deleted",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where EventName == 'DeleteNetworkAclEntry' and isempty(ErrorMessage) and isempty(ErrorCode)\n| extend egress=parse_json(RequestParameters)['egress']\n| where egress == false\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "An attacker could delete a network ACL and gain access to an instance from anywhere. Verify this action with the entity."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "DefenseEvasion"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1562"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '49bae199-ea04-4a2e-95a6-e3a1f68ab259'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 25",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '49bae199-ea04-4a2e-95a6-e3a1f68ab259')]",
                                "contentId": "49bae199-ea04-4a2e-95a6-e3a1f68ab259",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-5yuumazqda73o",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-5yuumazqda73o",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('4055466c-8a84-44c6-91d0-46469f3ba0b9')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "4055466c-8a84-44c6-91d0-46469f3ba0b9",
                "displayName": "New AccessKey created for Root user",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_26",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "New AccessKey created for Root user",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n  | where  EventName == \"CreateAccessKey\" and tostring(parse_json(RequestParameters).userName) == \"Root\" and isempty(ErrorCode) and isempty(ErrorMessage)\n  | project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \n  UserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource,UserIdentityArn, AdditionalEventData, ResponseElements, RequestParameters\n  | extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n  | extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Attackers with the CreateAccessKey permissions for other users can create an access Key ID and secret access key belonging to another user in the AWS environment for privilege escalation."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Persistence"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1078"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '4055466c-8a84-44c6-91d0-46469f3ba0b9'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 26",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '4055466c-8a84-44c6-91d0-46469f3ba0b9')]",
                                "contentId": "4055466c-8a84-44c6-91d0-46469f3ba0b9",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-dd3poapyr6j3w",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-dd3poapyr6j3w",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('e73ebd34-4f04-4684-a5f0-dba820127ce8')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "e73ebd34-4f04-4684-a5f0-dba820127ce8",
                "displayName": "CreatePolicyVersion with excessive permissions",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_27",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "CreatePolicyVersion with excessive permissions",
                                "category": "Hunting Queries",
                                "query": "let check_actions = AWSCloudTrail\n| where EventName == \"CreatePolicyVersion\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend state=parse_json(parse_json(replace_string(tostring(parse_json(RequestParameters)['policyDocument']),'\\\\\"','\"')).['Statement'])\n| mv-expand state\n| extend Action= tostring(parse_json(state.['Action'][0])), Effect=tostring(parse_json(state.['Effect']))\n| where Action has \"*\" and Effect == 'Allow'\n| distinct AwsEventId;\nAWSCloudTrail\n| where EventName == \"CreatePolicyVersion\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| join kind=inner (check_actions) on AwsEventId\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| project-away AwsEventId1\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "A policy with excessive permissions detected. Attacker could use that policy to escalate privileges and for malicious activities. Verify the policy creation with the entity."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "PrivilegeEscalation"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1484"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'e73ebd34-4f04-4684-a5f0-dba820127ce8'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 27",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'e73ebd34-4f04-4684-a5f0-dba820127ce8')]",
                                "contentId": "e73ebd34-4f04-4684-a5f0-dba820127ce8",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-pua5nsm7zpidy",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-pua5nsm7zpidy",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('b9b0fd12-d72d-4f66-a013-c1acdeea2670')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "b9b0fd12-d72d-4f66-a013-c1acdeea2670",
                "displayName": "RDS instance master password changed",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_28",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "RDS instance master password changed",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where  EventName == \"ModifyDBCluster\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| where isnotempty(tostring(parse_json(RequestParameters).masterUserPassword))\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Detected change of the RDS Master password. Verify if this was intentional, or if it was caused by a malicious actor."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "PrivilegeEscalation"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1484"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', 'b9b0fd12-d72d-4f66-a013-c1acdeea2670'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 28",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', 'b9b0fd12-d72d-4f66-a013-c1acdeea2670')]",
                                "contentId": "b9b0fd12-d72d-4f66-a013-c1acdeea2670",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-4vt6i7mjnza4c",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-4vt6i7mjnza4c",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('70c36558-e6d8-48b4-98b3-185d555cd5af')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "70c36558-e6d8-48b4-98b3-185d555cd5af",
                "displayName": "Risky role name created",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_29",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Risky role name created",
                                "category": "Hunting Queries",
                                "query": "let PacuRoleNames = (\nexternaldata (RoleName:string)\n[h@'https://raw.githubusercontent.com/RhinoSecurityLabs/pacu/master/pacu/modules/iam__enum_roles/default-word-list.txt']\n);\nAWSCloudTrail\n| where EventName == \"CreateRole\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend roleName = parse_json(tostring((parse_json(RequestParameters)))).roleName\n| where roleName in (PacuRoleNames)\n| distinct TimeGenerated, EventName, SourceIpAddress, UserIdentityArn, UserIdentityUserName, tostring(roleName), UserIdentityAccountId, AWSRegion\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| summarize EventCount = count(), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), EventNameList=make_set(EventName), IPList=make_set(SourceIpAddress) by UserIdentityAccountId, AWSRegion, UserIdentityUserName, TimeGenerated, SourceIpAddress\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Detections of risky role names could indicate that a malicious framework was executed in your environment."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Persistence"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1098"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '70c36558-e6d8-48b4-98b3-185d555cd5af'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 29",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '70c36558-e6d8-48b4-98b3-185d555cd5af')]",
                                "contentId": "70c36558-e6d8-48b4-98b3-185d555cd5af",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-evvhze6tl2gmm",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-evvhze6tl2gmm",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('356aa5a8-fa6f-4eb9-baa9-ffcf725e3e82')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "356aa5a8-fa6f-4eb9-baa9-ffcf725e3e82",
                "displayName": "S3 bucket has been deleted",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_30",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "S3 bucket has been deleted",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where  EventName == \"DeleteBucket\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, \nUserIdentityUserName, UserIdentityArn, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, ResponseElements, BucketName=tostring(parse_json(RequestParameters).bucketName)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = BucketName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Detected deletion of a S3 bucket. An attacker could delete S3 objects for impact and Denail of service purposes."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Impact"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1485"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '356aa5a8-fa6f-4eb9-baa9-ffcf725e3e82'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 30",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '356aa5a8-fa6f-4eb9-baa9-ffcf725e3e82')]",
                                "contentId": "356aa5a8-fa6f-4eb9-baa9-ffcf725e3e82",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-v63by5rrxbzve",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-v63by5rrxbzve",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('6eb59239-78c5-401d-acfa-5cb9b3d31cd4')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "6eb59239-78c5-401d-acfa-5cb9b3d31cd4",
                "displayName": "S3 bucket encryption modified",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_31",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "S3 bucket encryption modified",
                                "category": "Hunting Queries",
                                "query": "AWSCloudTrail\n| where EventName in (\"PutBucketEncryption\",\"DeleteBucketEncryption\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| extend encryptionConfig = tostring(parse_json(RequestParameters).ServerSideEncryptionConfiguration.Rule)\n| where encryptionConfig contains RecipientAccountId\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Detected modification of bucket encryption. An attacker could modify encryption of existing buckets for denial of service attacks."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "Impact"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1486"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '6eb59239-78c5-401d-acfa-5cb9b3d31cd4'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 31",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '6eb59239-78c5-401d-acfa-5cb9b3d31cd4')]",
                                "contentId": "6eb59239-78c5-401d-acfa-5cb9b3d31cd4",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-u7kjoprowh76e",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-u7kjoprowh76e",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('82ecf967-d6e9-4757-8f5d-42c562a8f05f')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "82ecf967-d6e9-4757-8f5d-42c562a8f05f",
                "displayName": "Suspicious activity of STS token related to EC2",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_32",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Suspicious activity of STS token related to EC2",
                                "category": "Hunting Queries",
                                "query": "let aws_public_ips = externaldata(prefixes: string)\n[ \n   h@'https://aka.ms/awspublicipaddresse/aws-public-ip-addresses/ip-ranges.json'\n]\nwith(format='multijson');\nlet timeframe = 30m;\nlet lookback = 12h;\n//Get the AccessKey in the STS token (IMDS) when EC2 service assumes the Role periodically\nlet sts_token = AWSCloudTrail\n| where TimeGenerated >= ago (lookback)\n| where EventSource == \"sts.amazonaws.com\" and SourceIpAddress == \"ec2.amazonaws.com\"\n| extend instanceId = tostring(parse_json(RequestParameters).roleSessionName)\n| extend token = tostring(parse_json(ResponseElements).credentials.accessKeyId);\n//Identify if the EC2 belongs to ECS/EKS\nlet typeOfEC2 = AWSCloudTrail\n| where TimeGenerated >= ago (lookback)\n| extend instanceId = tostring(split(UserIdentityPrincipalid, \":\")[1])\n| join sts_token on instanceId\n| where UserAgent !startswith \"kubernetes\" or UserAgent !startswith \"Amazon ECS Agent\"\n| project-away SourceIpAddress1, UserIdentityUserName1, UserIdentityArn1, TimeGenerated1;\n//Get the identities who used that STS token - this can be the EC2 which assumed it (legit),\n//but it can also be an external identity (attacker) which abuses the token permissions \nlet tokenUsage = AWSCloudTrail\n| where TimeGenerated >= ago (timeframe)\n| join kind=inner typeOfEC2 on $left.UserIdentityAccessKeyId == $right.token\n| extend region = AWSRegion\n| project-away SourceIpAddress1, UserIdentityUserName1, UserIdentityArn1, TimeGenerated1;\n//Check whether the called identity is legit\naws_public_ips\n| mv-expand todynamic(prefixes)\n| extend ip_prefix=tostring(todynamic(prefixes.['ip_prefix']))\n| extend region=tostring(todynamic(prefixes.['region']))\n| extend service=tostring(todynamic(prefixes.['service']))\n| project-away prefixes\n| where service == \"EC2\" \n| join kind=inner tokenUsage on region\n| where SourceIpAddress !contains \"amazonaws.com\"\n| where ipv4_is_private(SourceIpAddress) == false\n| extend IsInRange = ipv4_is_in_range(SourceIpAddress, ip_prefix)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName, AssumedRoleArn = UserIdentityArn\n| summarize timestamp=arg_max(timestamp,*), r = make_set(IsInRange) by SourceIpAddress, UserIdentityUserName, UserIdentityArn\n| where not (set_has_element(r, true))\n| project-away ip_prefix, IsInRange\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Suspicious activity of the STS token of an EC2 machine hosted by ECS (for example, by SSRF) indicates a possible token hijacking. An attacker may have stolen the token and could abuse its permissions to escalate privileges and move laterally in the cloud account."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "CredentialAccess"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1528"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '82ecf967-d6e9-4757-8f5d-42c562a8f05f'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 32",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '82ecf967-d6e9-4757-8f5d-42c562a8f05f')]",
                                "contentId": "82ecf967-d6e9-4757-8f5d-42c562a8f05f",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-at7xubvur4qk6",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-at7xubvur4qk6",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('67af1633-311f-4a94-bc8f-f904a54637b2')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "67af1633-311f-4a94-bc8f-f904a54637b2",
                "displayName": "Suspicious activity of STS token related to ECS",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_33",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Suspicious activity of STS token related to ECS",
                                "category": "Hunting Queries",
                                "query": "let aws_public_ips = externaldata(prefixes: string)\n[ \n    h@'https://aka.ms/awspublicipaddresse/aws-public-ip-addresses/ip-ranges.json'\n]\nwith(format='multijson');\nlet timeframe = 30m;\nlet lookback = 12h;\n//Get the AccessKey in the STS token (IMDS) when EC2 service assumes the Role periodically\nlet sts_token = AWSCloudTrail\n| where TimeGenerated >= ago (lookback)\n| where EventSource == \"sts.amazonaws.com\" and SourceIpAddress == \"ec2.amazonaws.com\"\n| extend instanceId = tostring(parse_json(RequestParameters).roleSessionName)\n| extend token = tostring(parse_json(ResponseElements).credentials.accessKeyId);\n//Identify if the EC2 belongs to ECS/EKS\nlet typeOfEC2 = AWSCloudTrail\n| where TimeGenerated >= ago (lookback)\n| extend instanceId = tostring(split(UserIdentityPrincipalid, \":\")[1])\n| join sts_token on instanceId\n| where UserAgent startswith \"Amazon ECS Agent\"\n| project-away SourceIpAddress1, UserIdentityUserName1, UserIdentityArn1, TimeGenerated1;\n//Get the identities who used that STS token - this can be the EC2 which assumed it (legit),\n//but it can also be an external identity (attacker) which abuses the token permissions \nlet tokenUsage = AWSCloudTrail\n| where TimeGenerated >= ago (timeframe)\n| join kind=inner typeOfEC2 on $left.UserIdentityAccessKeyId == $right.token\n| extend region = AWSRegion\n| project-away SourceIpAddress1, UserIdentityUserName1, UserIdentityArn1, TimeGenerated1;\n//Check whether the called identity is legit\naws_public_ips\n| mv-expand todynamic(prefixes)\n| extend ip_prefix=tostring(todynamic(prefixes.['ip_prefix']))\n| extend region=tostring(todynamic(prefixes.['region']))\n| extend service=tostring(todynamic(prefixes.['service']))\n| project-away prefixes\n| where service == \"EC2\" \n| join kind=inner tokenUsage on region\n| where SourceIpAddress !contains \"amazonaws.com\"\n| where ipv4_is_private(SourceIpAddress) == false\n| extend IsInRange = ipv4_is_in_range(SourceIpAddress, ip_prefix)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName, AssumedRoleArn = UserIdentityArn\n| summarize timestamp=arg_max(timestamp,*), r = make_set(IsInRange) by SourceIpAddress, UserIdentityUserName, UserIdentityArn\n| where not (set_has_element(r, true))\n| project-away ip_prefix, IsInRange\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Suspicious activity of the STS token of an EC2 machine hosted by ECS (for example, by SSRF) indicates a possible token hijacking. An attacker may have stolen the token and could abuse its permissions to escalate privileges and move laterally in the cloud account."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "CredentialAccess"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1528"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '67af1633-311f-4a94-bc8f-f904a54637b2'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 33",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '67af1633-311f-4a94-bc8f-f904a54637b2')]",
                                "contentId": "67af1633-311f-4a94-bc8f-f904a54637b2",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-324glvv2dhnpc",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-324glvv2dhnpc",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('0cd3eb95-6c8e-4eeb-8338-a0decdc0a328')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "0cd3eb95-6c8e-4eeb-8338-a0decdc0a328",
                "displayName": "Suspicious activity of STS token related to Glue",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_34",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Suspicious activity of STS token related to Glue",
                                "category": "Hunting Queries",
                                "query": "let aws_public_ips = externaldata(prefixes: string)\n[ \n     h@'https://aka.ms/awspublicipaddresse/aws-public-ip-addresses/ip-ranges.json'\n]\nwith(format='multijson');\nlet timeframe = 30m;\nlet lookback = 12h;\n//Get the AccessKey in the STS token when Lambda service assumes the Role periodically (max assumed session can be 12h)\nlet sts_token = AWSCloudTrail\n| where TimeGenerated >= ago (lookback)\n| where EventSource == \"sts.amazonaws.com\" and SourceIpAddress == \"glue.amazonaws.com\"\n| extend instanceId = tostring(parse_json(RequestParameters).roleSessionName)\n| extend token = tostring(parse_json(ResponseElements).credentials.accessKeyId);\n//Get the identities who used that STS token - this can be the Lambda function itself which assumed it (legit),\n//but it can also be an external identity which abuses the token permissions\nlet tokenUsage = AWSCloudTrail\n| where TimeGenerated >= ago (timeframe)\n| join kind=inner sts_token on $left.UserIdentityAccessKeyId == $right.token\n| extend region = AWSRegion1\n| project-away SourceIpAddress1, UserIdentityUserName1, UserIdentityArn1, TimeGenerated1;\n//Check whether the called identity is legit\naws_public_ips\n| mv-expand todynamic(prefixes)\n| extend ip_prefix=tostring(todynamic(prefixes.['ip_prefix']))\n| extend region=tostring(todynamic(prefixes.['region']))\n| extend service=tostring(todynamic(prefixes.['service']))\n| project-away prefixes\n| where service == \"AMAZON\" \n| join kind=inner tokenUsage on region\n| where SourceIpAddress !contains \"amazonaws.com\"\n| where ipv4_is_private(SourceIpAddress) == false\n| extend IsInRange = ipv4_is_in_range(SourceIpAddress, ip_prefix)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName, AssumedRoleArn = UserIdentityArn\n| summarize timestamp=arg_max(timestamp,*), r = make_set(IsInRange) by SourceIpAddress, UserIdentityUserName, UserIdentityArn\n| where not (set_has_element(r, true))\n| project-away ip_prefix, IsInRange\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Suspicious activity of the STS token of a Glue endpoint machine hosted by ECS (for example, by SSRF) indicates a possible token hijacking. An attacker may have stolen the token and could abuse its permissions to escalate privileges and move laterally in the cloud account."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "CredentialAccess"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1528"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '0cd3eb95-6c8e-4eeb-8338-a0decdc0a328'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 34",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '0cd3eb95-6c8e-4eeb-8338-a0decdc0a328')]",
                                "contentId": "0cd3eb95-6c8e-4eeb-8338-a0decdc0a328",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-yr76sujeqjehq",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-yr76sujeqjehq",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('46685737-676a-4084-8e98-31b2998062db')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "46685737-676a-4084-8e98-31b2998062db",
                "displayName": "Suspicious activity of STS Token related to Kubernetes worker node",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_35",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Suspicious activity of STS Token related to Kubernetes worker node",
                                "category": "Hunting Queries",
                                "query": "let aws_public_ips = externaldata(prefixes: string)\n[ \n   h@'https://aka.ms/awspublicipaddresse/aws-public-ip-addresses/ip-ranges.json'\n]\nwith(format='multijson');\nlet timeframe = 30m;\nlet lookback = 12h;\n//Get the AccessKey in the STS token (IMDS) when EC2 service assumes the Role periodically\nlet sts_token = AWSCloudTrail\n| where TimeGenerated >= ago (lookback)\n| where EventSource == \"sts.amazonaws.com\" and SourceIpAddress == \"ec2.amazonaws.com\"\n| extend instanceId = tostring(parse_json(RequestParameters).roleSessionName)\n| extend token = tostring(parse_json(ResponseElements).credentials.accessKeyId);\n//Identify if the EC2 belongs to ECS/EKS\nlet typeOfEC2 = AWSCloudTrail\n| where TimeGenerated >= ago (lookback)\n| extend instanceId = tostring(split(UserIdentityPrincipalid, \":\")[1])\n| join sts_token on instanceId\n| where UserAgent startswith \"kubernetes\"\n| project-away SourceIpAddress1, UserIdentityUserName1, UserIdentityArn1, TimeGenerated1;\n//Get the identities who used that STS token - this can be the EC2 which assumed it (legit),\n//but it can also be an external identity (attacker) which abuses the token permissions \nlet tokenUsage = AWSCloudTrail\n| where TimeGenerated >= ago (timeframe)\n| join kind=inner typeOfEC2 on $left.UserIdentityAccessKeyId == $right.token\n| extend region = AWSRegion\n| project-away SourceIpAddress1, UserIdentityUserName1, UserIdentityArn1, TimeGenerated1;\n//Check whether the called identity is legit\naws_public_ips\n| mv-expand todynamic(prefixes)\n| extend ip_prefix=tostring(todynamic(prefixes.['ip_prefix']))\n| extend region=tostring(todynamic(prefixes.['region']))\n| extend service=tostring(todynamic(prefixes.['service']))\n| project-away prefixes\n| where service == \"EC2\" \n| join kind=inner tokenUsage on region\n| where SourceIpAddress !contains \"amazonaws.com\"\n| where ipv4_is_private(SourceIpAddress) == false\n| extend IsInRange = ipv4_is_in_range(SourceIpAddress, ip_prefix)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName, AssumedRoleArn = UserIdentityArn\n| summarize timestamp=arg_max(timestamp,*), r = make_set(IsInRange) by SourceIpAddress, UserIdentityUserName, UserIdentityArn\n| where not (set_has_element(r, true))\n| project-away ip_prefix, IsInRange\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Suspicious activity of the STS token of an EC2 machine hosted by EKS (for example, by SSRF) indicates a possible token hijacking. An attacker may have stolen the token and could abuse its permissions to escalate privileges and move laterally in the cloud account."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "CredentialAccess"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1528"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '46685737-676a-4084-8e98-31b2998062db'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 35",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '46685737-676a-4084-8e98-31b2998062db')]",
                                "contentId": "46685737-676a-4084-8e98-31b2998062db",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-soahcihcynosg",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-soahcihcynosg",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-hq-',uniquestring('70a6e84f-6f3b-4ce1-83d6-ea6df9e7a9dd')),'1.0.0'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]"
            ],
            "properties": {
                "contentId": "70a6e84f-6f3b-4ce1-83d6-ea6df9e7a9dd",
                "displayName": "Suspicious activity of STS token related to Lambda",
                "contentKind": "HuntingQuery",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "Amazon_Web_Services_Hunting_Query_36",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Suspicious activity of STS token related to Lambda",
                                "category": "Hunting Queries",
                                "query": "let aws_public_ips = externaldata(prefixes: string)\n[ \n   h@'https://aka.ms/awspublicipaddresse/aws-public-ip-addresses/ip-ranges.json'\n]\nwith(format='multijson');\nlet timeframe = 30m;\nlet lookback = 12h;\n//Get the AccessKey in the STS token when Lambda service assumes the Role periodically (max assumed session can be 12h)\nlet sts_token = AWSCloudTrail\n| where TimeGenerated >= ago (lookback)\n| where EventSource == \"sts.amazonaws.com\" and SourceIpAddress == \"lambda.amazonaws.com\"\n| extend instanceId = tostring(parse_json(RequestParameters).roleSessionName)\n| extend token = tostring(parse_json(ResponseElements).credentials.accessKeyId);\n//Get the identities who used that STS token - this can be the Lambda function itself which assumed it (legit),\n//but it can also be an external identity which abuses the token permissions\nlet tokenUsage = AWSCloudTrail\n| where TimeGenerated >= ago (timeframe)\n| join kind=inner sts_token on $left.UserIdentityAccessKeyId == $right.token\n| extend region = AWSRegion1\n| project-away SourceIpAddress1, UserIdentityUserName1, UserIdentityArn1, TimeGenerated1;\n//Check whether the called identity is legit\naws_public_ips\n| mv-expand todynamic(prefixes)\n| extend ip_prefix=tostring(todynamic(prefixes.['ip_prefix']))\n| extend region=tostring(todynamic(prefixes.['region']))\n| extend service=tostring(todynamic(prefixes.['service']))\n| project-away prefixes\n| where service == \"AMAZON\" \n| join kind=inner tokenUsage on region\n| where SourceIpAddress !contains \"amazonaws.com\"\n| where ipv4_is_private(SourceIpAddress) == false\n| extend IsInRange = ipv4_is_in_range(SourceIpAddress, ip_prefix)\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName, AssumedRoleArn = UserIdentityArn\n| summarize timestamp=arg_max(timestamp,*), r = make_set(IsInRange) by SourceIpAddress, UserIdentityUserName, UserIdentityArn\n| where not (set_has_element(r, true))\n| project-away ip_prefix, IsInRange\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "Suspicious activity of the STS token of a Lambda function (for example, by SSRF) indicates a possible token hijacking. An attacker may have stolen the token and could abuse its permissions to escalate privileges and move laterally in the cloud account."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "CredentialAccess"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1528"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', '70a6e84f-6f3b-4ce1-83d6-ea6df9e7a9dd'),'/'))))]",
                            "properties": {
                                "description": "Amazon Web Services Hunting Query 36",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', '70a6e84f-6f3b-4ce1-83d6-ea6df9e7a9dd')]",
                                "contentId": "70a6e84f-6f3b-4ce1-83d6-ea6df9e7a9dd",
                                "kind": "HuntingQuery",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Amazon Web Services",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "2.0.5",
                "packageName": "Amazon Web Services",
                "packageId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-ttalivb5yoi2m",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-hq-ttalivb5yoi2m",
                "contentSchemaVersion": "3.0.0",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', 'azuresentinel.azure-sentinel-solution-amazonwebservices')]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "properties": {
                "version": "2.0.5",
                "kind": "Solution",
                "contentSchemaVersion": "3.0.0",
                "contentId": "azuresentinel.azure-sentinel-solution-amazonwebservices",
                "source": {
                    "kind": "Solution",
                    "name": "Amazon Web Services",
                    "sourceId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                },
                "dependencies": {
                    "operator": "AND",
                    "criteria": [

                        {
                            "kind": "DataConnector",
                            "contentId": "AWS",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "DataConnector",
                            "contentId": "AwsS3",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "Workbook",
                            "contentId": "AmazonWebServicesNetworkActivitiesWorkbook",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "Workbook",
                            "contentId": "AmazonWebServicesUserActivitiesWorkbook",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "8c2ef238-67a0-497d-b1dd-5c8a0f533e25",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "65360bb0-8986-4ade-a89d-af3cf44d28aa",
                            "version": "1.0.2"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "610d3850-c26f-4f20-8d86-f10fdf2425f5",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "d25b1998-a592-4bc5-8a3a-92b39eedb1bc",
                            "version": "1.0.3"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "32555639-b639-4c2b-afda-c0ae0abefa55",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "826bb2f8-7894-4785-9a6b-a8a855d8366f",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "4f19d4e3-ec5f-4abc-9e61-819eb131758c",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "c7bfadd4-34a6-4fa5-82f8-3691a32261e8",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "0ee2aafb-4500-4e36-bcb1-e90eec2f0b9b",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "bf0cde21-0c41-48f6-a40c-6b5bd71fa106",
                            "version": "1.0.2"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "f6928301-56da-4d2c-aabe-e1a552bc8892",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "21702832-aff3-4bd6-a8e1-663b6818503d",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "0adab960-5565-4978-ba6d-044553e4acc4",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "9da99021-d318-4711-a78a-6dea76129b3a",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "efdc3cff-f006-426f-97fd-4657862f7b9a",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "6f675c17-7a61-440c-abd1-c73ef4d748ec",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "8a607285-d95c-473d-8aab-59920de63af6",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "8e15998e-1e32-4b6d-abd1-e8482e8f3def",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "467cbe7e-e6d4-4f4e-8e44-84dd01932c32",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "22115d3c-e87c-485a-9130-33797d619124",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "6009c632-94e9-4ffb-a11a-b4b99f457f88",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "a694e977-740c-4578-9f8f-5e39029f1d23",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "56626956-304f-4408-8ea6-7ba5746ce09e",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "796a45ee-220b-42be-8415-c8c933cf3b6d",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "aaa2c05e-fdd4-4fa0-9072-6cffe3641b34",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "454133a7-5427-4a7c-bdc4-0adfa84dda16",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "19602494-94af-43c8-90ba-eb0e14999612",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "633a91df-d031-4b6e-a413-607a61540559",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "f8ea7d50-e33b-4b9d-9c3e-a59fcbcee281",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "60dfc193-0f73-4279-b43c-110ade02b201",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "139e7116-3884-4246-9978-c8f740770bdf",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "49ce5322-60d7-4b02-ad79-99f650aa5790",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "afb4191b-a142-4065-a0da-f721ee3d006c",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "719d5204-10ab-4b1f-aee1-da7326750260",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "b9be2aa6-911d-4131-8658-d2a537ed49f4",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "e20d35a3-4fec-4c8b-81b1-fc33b41990b0",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "d7c39e15-997f-49e5-a782-73bf07db8aa5",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "d0953d50-3dc1-4fa3-80fa-4d3e973a0959",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "fc3061bb-319c-4fe9-abe2-f59899a6d907",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "48896551-1c28-4a09-8388-e51e5a927d23",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "a2b2a984-c820-4d93-830e-139bffd81fa3",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "370f0e5e-da1d-4a14-8ced-d1d7ab66a8d7",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "8e01c41d-bd4c-4bbe-aed5-18592735052d",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "c668c09f-5a49-43f9-b249-6b89a31ec8fb",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "8f1630c2-2e45-4df2-be43-50fba90f601d",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "31b9e94b-0df6-4a3d-a297-3457b53c5d86",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "b7a44e0d-ae4c-4fb2-be1b-aa0e45f2327b",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "6b9b4ee6-f4c1-4b86-8c8c-beb0bb59ae44",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "44a5b65e-b0a9-4591-aabc-388fd92a28c4",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "09f2a28b-3286-4268-9e2f-33805f104e5d",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "b442b9e2-5cc4-4129-a85b-a5ef38a9e5f0",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "bce1dcba-4948-414d-8838-6385afb9d496",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "874a1762-3fd7-4489-b411-6d4a9e9e8a59",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "75647b58-bcc8-4eb5-9658-46698d3fa153",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "e0a67cd7-b4e5-4468-aae0-26cb16a1bbd2",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "e1a91db8-f2b3-4531-bff6-da133d4f4f1a",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "0db42a94-e7c8-4bf1-99a7-1a2fb4158212",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "5b6ee21d-da53-46eb-827c-eab2a9ba3d2f",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "e0d57543-acbd-428b-bb96-24a67506f84d",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "81a8880f-cc20-40ce-98d6-2fc6a1c5b9a4",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "2b8cecfe-f705-432d-9f38-08207b9473e1",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "48c49b1d-2aa0-442b-96e3-cae6ad1251cd",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "a2772445-9bb1-4176-9481-b262cb59118a",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "4e3c81bf-61a4-47f4-b20d-a5a414ea08aa",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "b5b172b1-d976-4113-af1f-02f7bf7d2092",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "4fbbae0a-ce5b-4b2a-b5e6-700920561680",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "c9ccaebf-314c-446d-b3f6-314560ccb0e1",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "13afb771-5d55-4d69-a745-83d2fc69a923",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "bf130d1d-702b-4af6-9528-8bc4229e59f4",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "7e258a45-b356-44f6-9a62-2643cef7b869",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "d022a62c-643b-4e8a-b583-0230e32a96e4",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "d82ea1db-f600-4c9e-8ba8-d271e9c12eb8",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "77d0aadc-aaea-4346-b61a-bf7ac6b71bba",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "2dd2143b-6667-4a7a-b04f-98d22caeffac",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "838f59d4-fe47-422b-819d-1be502940547",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "3b7df29e-a798-4b6b-9ef7-73b9a3cf56a2",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "05167149-4670-4a9f-b34e-5a0a92243194",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "a3a19731-9e82-49b6-9142-2dd570feefd5",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "49bae199-ea04-4a2e-95a6-e3a1f68ab259",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "4055466c-8a84-44c6-91d0-46469f3ba0b9",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "e73ebd34-4f04-4684-a5f0-dba820127ce8",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "b9b0fd12-d72d-4f66-a013-c1acdeea2670",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "70c36558-e6d8-48b4-98b3-185d555cd5af",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "356aa5a8-fa6f-4eb9-baa9-ffcf725e3e82",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "6eb59239-78c5-401d-acfa-5cb9b3d31cd4",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "82ecf967-d6e9-4757-8f5d-42c562a8f05f",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "67af1633-311f-4a94-bc8f-f904a54637b2",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "0cd3eb95-6c8e-4eeb-8338-a0decdc0a328",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "46685737-676a-4084-8e98-31b2998062db",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "70a6e84f-6f3b-4ce1-83d6-ea6df9e7a9dd",
                            "version": "1.0.0"
                        },
                        {
                            "contentId": "azuresentinel.azure-sentinel-solution-dns",
                            "kind": "Solution"
                        },
                        {
                            "contentId": "sentinel4azurefirewall.sentinel4azurefirewall",
                            "kind": "Solution"
                        },
                        {
                            "contentId": "azuresentinel.azure-sentinel-solution-ciscoumbrella",
                            "kind": "Solution"
                        },
                        {
                            "contentId": "corelightinc1584998267292.corelight-for-azure-sentinel",
                            "kind": "Solution"
                        },
                        {
                            "contentId": "azuresentinel.azure-sentinel-solution-gcpdns",
                            "kind": "Solution"

                        },
                        {
                            "contentId": "azuresentinel.azure-sentinel-solution-infobloxnios",
                            "kind": "Solution"

                        },
                        {
                            "contentId": "azuresentinel.azure-sentinel-solution-iscbind",
                            "kind": "Solution"
                        },
                        {
                            "contentId": "vectraaiinc.vectra_sentinel_solution",
                            "kind": "Solution"
                        },
                        {
                            "contentId": "zscaler1579058425289.zscaler_internet_access_mss",
                            "kind": "Solution"
                        }
                    ]
                },
                "firstPublishDate": "2022-05-26",
                "providers": [
                    "Amazon Web Services"
                ],
                "categories": {
                    "domains": [
                        "Security - Cloud Security"
                    ]
                },
                "contentKind": "Solution",
                "contentProductId": "azuresentinel.azure-sentinel-solution-amazonwebser-sl-kmjeftlz6ckqi",
                "id": "azuresentinel.azure-sentinel-solution-amazonwebser-sl-kmjeftlz6ckqi",
                "displayName": "Amazon Web Services",
                "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
                "descriptionHtml": "<p><strong>Note:</strong> <em>There may be <a target=\"_blank\" href=\"https://aka.ms/sentinelsolutionsknownissues\" rel=\"noopener\">known issues</a> pertaining to this Solution, please refer to them before installing.</em></p><p>The Amazon Web Services solution for Microsoft Sentinel allows you to enable Security monitoring of AWS services by allowing ingestion of logs from the AWS CloudTrail platform, VPC Flow Logs, AWS GuardDuty and AWS CloudWatch.<br></p><p><strong>Data Connectors:</strong> 2, <strong>Workbooks:</strong> 2, <strong>Analytic Rules:</strong> 54, <strong>Hunting Queries:</strong> 36</p><p><a target=\"_blank\" href=\"https://aka.ms/azuresentinel\" rel=\"noopener\">Learn more about Microsoft Sentinel</a> | <a target=\"_blank\" href=\"https://aka.ms/azuresentinelsolutionsdoc\" rel=\"noopener\">Learn more about Solutions</a></p>",
                "icon": "https://store-images.s-microsoft.com/image/apps.64685.2be652b5-01b5-4297-91de-fb1bdca4520e.3b2d6c32-9299-492f-9684-b4890e8acdd9.dff4bda0-283e-49e6-9007-b35209b0a2fd",
                "isPreview": false,
                "isDeprecated": false
            }
        }
    ],
    "variables": {}
}